<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>开源协议与开源软件</title>
      <link href="/OpenSource/"/>
      <url>/OpenSource/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是开源软件"><a class="header-anchor" href="#什么是开源软件"># </a>什么是开源软件</h2><blockquote><p>开源软件就是把软件程序与源代码文件一起打包提供给用户，用户既可以不受限制地使用该软件的全部功能，也可以根据自己的需求修改源代码，甚至编制成衍生产品再次发布出去。</p></blockquote><p>  用户具有使用自由、修改自由、重新发布自由和创建衍生品自由，这正好符合了黑客和极客对自由的追求，因此开源软件在国内外都有着很高的人气，大家聚集在开源社区，共同推动开源软件的进步。支持开源软件的企业不单出是为了利益，而是相互扶持，共同努力服务好更多的用户。</p><a id="more"></a><blockquote><p>开源软件的优点</p></blockquote><table><thead><tr><th style="text-align:center">四大优点</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center">低风险</td><td>使用闭源软件无疑是把命运交给他人，一旦封闭的源代码没有人来维护，你将进退维谷；而且相较于商业软件公司，开源社区很少存在倒闭的问题。</td></tr><tr><td style="text-align:center">高品质</td><td>相较于闭源软件产品，开源项目通常是由开源社区来研发及维护的，参与编写、维护、测试的用户量众多，一般的 bug 还没有等爆发就已经被修补。</td></tr><tr><td style="text-align:center">低成本</td><td>开源工作者都是在幕后默默且无偿地付出劳动成果，为美好的世界贡献一份力量，因此使用开源社区推动的软件项目可以节省大量的人力、物力和财力。</td></tr><tr><td style="text-align:center">更透明</td><td>没有哪个笨蛋会把木马、后门等放到开放的源代码中，这样无疑是把自己的罪行暴露在阳光之下。</td></tr></tbody></table><h3 id="典型的开源软件"><a class="header-anchor" href="#典型的开源软件"># </a>典型的开源软件</h3><table><thead><tr><th>软件</th><th>说明</th></tr></thead><tbody><tr><td>Linux</td><td>Linux 是一款开源的操作系统，它的内核由多名极客共同维护。Linux 是开源软件的经典之作、代表之作、巅峰之作。</td></tr><tr><td>Apache</td><td>世界使用排名第一的 Web 服务器软件。</td></tr><tr><td><a href="http://c.biancheng.net/mysql/" target="_blank" rel="noopener">MySQL</a></td><td>世界上最流行的关系型数据库，适合中小型网站。</td></tr><tr><td>Firefox</td><td>火狐浏览器。在 Chrome 推出之前，Firefox 几乎是最快速的浏览器，直到现在也是 Web 开发人员的调试利器。</td></tr><tr><td>OpenOffice</td><td>套跨平台的办公软件套件，类似 Microsoft Office。</td></tr><tr><td><a href="http://c.biancheng.net/gcc/" target="_blank" rel="noopener">GCC</a></td><td><a href="http://c.biancheng.net/c/" target="_blank" rel="noopener">C语言</a>/<a href="http://c.biancheng.net/cplus/" target="_blank" rel="noopener">C++</a>编译器。</td></tr><tr><td><a href="http://c.biancheng.net/java/" target="_blank" rel="noopener">Java</a>、<a href="http://c.biancheng.net/php/" target="_blank" rel="noopener">PHP</a>、<a href="http://c.biancheng.net/python/" target="_blank" rel="noopener">Python</a></td><td>开源的编程语言。</td></tr></tbody></table><h3 id="开源社区"><a class="header-anchor" href="#开源社区"># </a>开源社区</h3><p>国内外开源社区推荐：<a href="https://www.oschina.net/" target="_blank" rel="noopener">开源中国</a>、<a href="http://www.chinaunix.net/" target="_blank" rel="noopener">ChinaUnix</a>、<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>、<a href="http://www.apache.org/" target="_blank" rel="noopener">Apache</a>、<a href="https://sourceforge.net/" target="_blank" rel="noopener">SourceForge</a>、</p><p>开源社区以国外为主，国内开源社区由于资金、人才、气氛等问题一直不太稳定，最后附上一张开源社区汇总图。</p><p><img src="http://c.biancheng.net/uploads/allimg/190328/1-1Z32QA10W42.jpg" alt="开源社区"></p><h2 id="开源协议"><a class="header-anchor" href="#开源协议"># </a>开源协议</h2><blockquote><p>开源协议规定了你在使用开源软件时的权利和责任，也就是规定了你可以做什么，不可以做什么。</p></blockquote><p>  开源软件在追求“自由”的同时，不能牺牲程序员的利益，否则将会影响程序员的创造激情，因此世界上现在有 60 多种被开源促进组织（Open Source Initiative）认可的开源许可协议来保证开源工作者的权益。下面列举了常见的开源协议</p><h3 id="1-gnu-gpl-gnu-general-public-license-gnu通用公共许可证"><a class="header-anchor" href="#1-gnu-gpl-gnu-general-public-license-gnu通用公共许可证"># </a>1、 GNU GPL（GNU General Public License，GNU通用公共许可证）</h3><p>  只要软件中包含了遵循 GPL 协议的产品或代码，该软件就必须也遵循 GPL 许可协议，也就是必须开源免费，不能闭源收费，因此这个协议并不适合商用软件。遵循 GPL 协议的开源软件数量极其庞大，包括 Linux系统在内的大多数的开源软件都是基于这个协议的。</p><table><thead><tr><th>GPL开源的主要特点</th><th>说明</th></tr></thead><tbody><tr><td>复制自由</td><td>允许把软件复制到任何人的电脑中，并且不限制复制的数量。</td></tr><tr><td>传播自由</td><td>允许软件以各种形式进行传播。</td></tr><tr><td>收费传播</td><td>允许在各种媒介上出售该软件，但必须提前让买家知道这个软件是可以免费获得的；因此，一般来讲，开源软件都是通过为用户提供有偿服务的形式来盈利的。</td></tr><tr><td>修改自由</td><td>允许开发人员增加或删除软件的功能，但软件修改后必须依然基于GPL许可协议授权。</td></tr></tbody></table><h3 id="2-bsd-berkeley-software-distribution-伯克利软件发布版-协议"><a class="header-anchor" href="#2-bsd-berkeley-software-distribution-伯克利软件发布版-协议"># </a>2、BSD（Berkeley Software Distribution，伯克利软件发布版）协议</h3><p>  BSD 协议基本上允许用户“为所欲为”，用户可以使用、修改和重新发布遵循该许可的软件，并且可以将软件作为商业软件发布和销售，前提是需要满足下面三个条件：</p><ul><li>如果再发布的软件中包含源代码，则源代码必须继续遵循 BSD 许可协议。</li><li>如果再发布的软件中只有二进制程序，则需要在相关文档或版权文件中声明原始代码遵循了 BSD 协议。</li><li>不允许用原始软件的名字、作者名字或机构名称进行市场推广。</li></ul><p>  BSD 对商业比较友好，很多公司在选用开源产品的时候都首选 BSD 协议，因为可以完全控制这些第三方的代码，甚至在必要的时候可以修改或者二次开发。</p><h3 id="3-apache-许可证版本-apache-license-version-协议"><a class="header-anchor" href="#3-apache-许可证版本-apache-license-version-协议"># </a>3、Apache 许可证版本（Apache License Version）协议</h3><p>  Apache 和 BSD 类似，都适用于商业软件。Apache 协议在为开发人员提供版权及专利许可的同时，允许用户拥有修改代码及再发布的自由。<br>  现在热门的 Hadoop、Apache HTTP Server、MongoDB 等项目都是基于该许可协议研发的，程序开发人员在开发遵循该协议的软件时，要严格遵守下面的四个条件：</p><ul><li>该软件及其衍生品必须继续使用 Apache 许可协议。</li><li>如果修改了程序源代码，需要在文档中进行声明。</li><li>若软件是基于他人的源代码编写而成的，则需要保留原始代码的协议、商标、专利声明及其他原作者声明的内容信息。</li><li>如果再发布的软件中有声明文件，则需在此文件中标注 Apache 许可协议及其他许可协议。</li></ul><h4 id="4-mit-massachusetts-institute-of-technology-协议"><a class="header-anchor" href="#4-mit-massachusetts-institute-of-technology-协议"># </a>4、 MIT（Massachusetts Institute of Technology）协议</h4><p>  目前限制最少的开源许可协议之一（比 BSD 和 Apache 的限制都少），只要程序的开发者在修改后的源代码中保留原作者的许可信息即可，因此普遍被商业软件所使用。</p><p>  使用 MIT 协议的软件有 PuTTY、X Window System、Ruby on Rails、Lua 5.0 onwards、Mono 等。</p><h3 id="5-gun-lgpl-gnu-lesser-general-public-license-gnu-宽通用公共许可证"><a class="header-anchor" href="#5-gun-lgpl-gnu-lesser-general-public-license-gnu-宽通用公共许可证"># </a>5、GUN LGPL（GNU Lesser General Public License，GNU 宽通用公共许可证）</h3><p>  LGPL 是 GPL 的一个衍生版本，也被称为 GPL V2，该协议主要是为类库设计的开源协议。</p><p>  LGPL 允许商业软件通过类库引用（link）的方式使用 LGPL 类库，而不需要开源商业软件的代码。这使得采用 LGPL 协议的开源代码可以被商业软件作为类库引用并发布和销售。</p><p>  但是如果修改 LGPL 协议的代码或者衍生品，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用 LGPL 协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以 LGPL 协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p><h3 id="6-文档的cc协议"><a class="header-anchor" href="#6-文档的cc协议"># </a>6、文档的CC协议</h3><p>  CC协议（A Creative Commons license）的中文叫做知识共享许可协议，是允许他人分发作品的公共版权许可之一。2002年12月16日，美国非盈利公司Creative Commons首次发布了CC协议。在经历了三个不同版本之后，CC 4.0于2013年11月25日发布。自此之后，CC 4.0被鼓励在全球范围内适用。</p><p>  创作共享协议允许作者选择不同的授权条款和根据不同国家的著作权法制定的版权协议，版权持有人可以指定以下的条件：</p><ul><li><p>姓名标示（by）：您可以自由复制、散布、展示及演出本作品；您必须按照莞作者或授权人所指定的方式，保留其姓名标示。</p></li><li><p>非商业性（nc）：您可以自由复制、散布、展示及演出本作品；您不得为商业目的而使用本作品。</p></li><li><p>禁止改作（nd）：你可以自由复制、散布、展示及演出本作品；您不得改变、转变或改作本作品。</p></li><li><p>相同方式分享（sa）：你可以自由复制、散布、展示及演出本作品；若您改变、转变或改作本作品，仅在遵守与本著作相同的授权条款下，您才能散布由本作品产生的衍生作品。</p></li></ul><h2 id="如何选择开源协议"><a class="header-anchor" href="#如何选择开源协议"># </a>如何选择开源协议</h2><p>  世界上的开源协议有上百种<a href="http://www.gnu.org/licenses/license-list.html" target="_blank" rel="noopener">点击查看</a>，乌克兰程序员 Paul Bagwell 画了一张分析图，说明应该怎么选择开源协议，</p><blockquote><p>图片来自于阮一峰博客：<a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener">如何选择开源协议</a></p></blockquote><p><img src="http://www.ruanyifeng.com/blogimg/asset/201105/free_software_licenses.png" alt="开源协议选择"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机相关常识 </category>
          
          <category> 软件常识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开源协议 </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 文件系统</title>
      <link href="/note/server/linux/LinuxFileSystem/"/>
      <url>/note/server/linux/LinuxFileSystem/</url>
      
        <content type="html"><![CDATA[<h2 id="linux-一切皆文件"><a class="header-anchor" href="#linux-一切皆文件"># </a>Linux 一切皆文件</h2><p>  Linux中所有内容都是以文件的形式保存和管理的，即一切皆文件，普通文件是文件，目录（Windows 下称为文件夹）是文件，硬件设备（键盘、监视器、硬盘、打印机）是文件，就连套接字（<a href="http://c.biancheng.net/socket/" target="_blank" rel="noopener">socket</a>)、网络通信等资源也都是文件。</p><p>Linux系统中，文件具体可分为以下几种类型：</p><ol><li>普通文件<ul><li>类似 mp4、pdf、html 这样，可直接拿来使用的文件都属于普通文件，Linux 用户根据访问权限的不同可以对这些文件进行查看、删除以及更改操作。</li></ul></li><li>目录文件<ul><li>Linux 系统中，目录文件包含了此目录中各个文件的文件名以及指向这些文件的指针，打开目录等同于打开目录文件，只要你有权限，可以随意访问目录中的任何文件。（目录文件的访问权限，同普通文件的执行权限，是一个意思。）</li></ul></li><li>字符设备文件和块设备文件<ul><li>Linux 系统中的所有设备，要么是块设备文件，要么是字符设备文件。这些文件通常隐藏在 /dev/ 目录下，当进行设备读取或外设交互时才会被使用。</li><li>例如，磁盘光驱属于块设备文件，串口设备则属于字符设备文件。</li></ul></li><li>套接字文件(<a href="http://c.biancheng.net/socket/" target="_blank" rel="noopener">socket</a>)<ul><li>套接字文件一般隐藏在 /var/run/ 目录下，用于进程间的网络通信。</li></ul></li><li>符号连接文件(symbolic link)<ul><li>类似与 Windows 中的快捷方式，是指向另一文件的简介指针（也就是软链接）。</li></ul></li><li>管道文件(pipe)<ul><li>主要用于进程间通信。例如，使用 mkfifo 命令创建一个 FIFO 文件，与此同时，启用进程 A 从 FIFO文件读数据，启用进程 B 从 FIFO文件中写数据，随写随读。</li></ul></li></ol><a id="more"></a><h3 id="一切皆文件-的利弊"><a class="header-anchor" href="#一切皆文件-的利弊"># </a>“一切皆文件”的利弊</h3><p>  和 Windows 系统不同，Linux 系统没有 C 盘、D 盘、E 盘那么多的盘符，只有一个根目录（/），所有的文件（资源）都存储在以根目录（/）为树根的树形目录结构中。</p><p>  这样做最明显的好处是，开发者仅需要使用一套 API 和开发工具即可调取 Linux 系统中绝大部分的资源。举个简单的例子，Linux 中几乎所有读（读文件，读系统状态，读 socket，读 PIPE）的操作都可以用 read 函数来进行；几乎所有更改（更改文件，更改系统参数，写 socket，写 PIPE）的操作都可以用 write 函数来进行。</p><p>  不利之处在于，使用任何硬件设备都必须与根目录下某一目录执行挂载操作，否则无法使用。我们知道，本身 Linux 具有一个以根目录为树根的文件目录结构，每个设备也同样如此，它们是相互独立的。如果我们想通过 Linux 上的根目录找到设备文件的目录结构，就必须将这两个文件系统目录合二为一，这就是挂载的真正含义。</p><h2 id="linux-目录的层次结构"><a class="header-anchor" href="#linux-目录的层次结构"># </a>Linux 目录的层次结构</h2><p>  Linux操作系统中，所有的文件和目录都被组织成以一个根节点“/”开始的倒置的树状结构：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/06/003vPl7Rty6E8kZRlAEdc690.jpg" alt="Linux目录结构"></p><p>  目录名或文件名都是区分大小写的，如 dog、DOG 和 Dog 为 3 个不同的目录或文件。完整的目录或文件路径是由一连串的目录名所组成的，其中每一个目录由“/”来分隔。如 cat 的完整路径是 /home/cat。</p><p>  在文件系统中，有两个特殊的目录，一个是用户所在的工作目录，即当前目录，可用一个点“.”表示；另一个是当前目录的上一层目录，也叫父目录，用两个点“…”表示。</p><p>  如果一个目录或文件名以一个点 . 开始，表示这个目录或文件是一个隐藏目录或文件(如：.bashrc)。即以默认方式查找时，不显示该目录或文件。</p><hr><p>  由于 Linux 系统免费开源，使得 Linux 发行版本有很多，利用 Linux 开发产品的团队也有很多，如果任由每个人都按照自己的想法来配置 Linux 系统文件目录，后期可能会产生诸多的管理问题。为了避免诸多使用者对 Linux 系统目录结构天马行空，Linux 基金会发布了 FHS 标准。多数 Linux 发行版系统都遵循这一标准。</p><h3 id="linux文件目录结构"><a class="header-anchor" href="#linux文件目录结构"># </a>Linux文件目录结构</h3><p>  为了方便管理和维护，Linux 系统采用了文件系统层次标准，也称为 FHS 标准<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，它规定了根目录下各个目录应该存在哪些类型的文件（或子目录）。</p><h4 id="linux-根目录"><a class="header-anchor" href="#linux-根目录"># </a>Linux 根目录（/）</h4><p>  FHS 认为，Linux 系统的根目录（/）最为重要（没有之一），其原因有以下 2 点：</p><ol><li>所有目录都是由根目录衍生出来的；</li><li>根目录与系统的开机、修复、还原密切相关；</li></ol><p>  因此，根目录必须包含开机软件、核心文件、开机所需程序、函数库、修复系统程序等文件，如下表所示</p><table><thead><tr><th style="text-align:center">一级目录</th><th>功能（作用）</th></tr></thead><tbody><tr><td style="text-align:center">/bin/</td><td>存放系统命令，普通用户和 root 都可以执行。放在 /bin 下的命令在单用户模式下也可以执行</td></tr><tr><td style="text-align:center">/boot/</td><td>系统启动目录，保存与系统启动相关的文件，如内核文件和启动引导程序（grub）文件等</td></tr><tr><td style="text-align:center">/dev/</td><td>设备文件保存位置</td></tr><tr><td style="text-align:center">/etc/</td><td>配置文件保存位置。系统内所有采用默认安装方式（rpm 安装）的服务配置文件全部保存在此目录中，如用户信息、服务的启动脚本、常用服务的配置文件等</td></tr><tr><td style="text-align:center">/home/</td><td>普通用户的主目录（也称为家目录）。在创建用户时，每个用户要有一个默认登录和保存自己数据的位置，就是用户的主目录，所有普通用户的主目录是在 /home/ 下建立一个和用户名相同的目录。如用户 liming 的主目录就是 /home/liming</td></tr><tr><td style="text-align:center">/lib/</td><td>系统调用的函数库保存位置</td></tr><tr><td style="text-align:center">/media/</td><td>挂载目录。系统建议用来挂载媒体设备，如软盘和光盘</td></tr><tr><td style="text-align:center">/mnt/</td><td>挂载目录。早期 Linux 中只有这一个挂载目录，并没有细分。系统建议这个目录用来挂载额外的设备，如 U 盘、移动硬盘和其他操作系统的分区</td></tr><tr><td style="text-align:center">/misc/</td><td>挂载目录。系统建议用来挂载 NFS 服务的共享目录。虽然系统准备了三个默认挂载目录 /media/、/mnt/、/misc/，但是到底在哪个目录中挂载什么设备可以由管理员自己决定。例如，笔者在接触 Linux 的时候，默认挂载目录只有 /mnt/，所以养成了在 /mnt/ 下建立不同目录挂载不同设备的习惯，如 /mnt/cdrom/ 挂载光盘、/mnt/usb/ 挂载 U 盘，都是可以的</td></tr><tr><td style="text-align:center">/opt/</td><td>第三方安装的软件保存位置。这个目录是放置和安装其他软件的位置，手工安装的源码包软件都可以安装到这个目录中。不过笔者还是习惯把软件放到 /usr/local/ 目录中，也就是说，/usr/local/ 目录也可以用来安装软件</td></tr><tr><td style="text-align:center">/root/</td><td>root 的主目录。普通用户主目录在 /home/ 下，root 主目录直接在“/”下</td></tr><tr><td style="text-align:center">/sbin/</td><td>保存与系统环境设置相关的命令，只有 root 可以使用这些命令进行系统环境设置，但也有些命令可以允许普通用户查看</td></tr><tr><td style="text-align:center">/srv/</td><td>服务数据目录。一些系统服务启动之后，可以在这个目录中保存所需要的数据</td></tr><tr><td style="text-align:center">/tmp/</td><td>临时目录。系统存放临时文件的目录，在该目录下，所有用户都可以访问和写入。建议此目录中不能保存重要数据，最好每次开机都把该目录清空</td></tr></tbody></table><p>  FHS 针对根目录中包含的子目录仅限于上表，但除此之外，Linux 系统根目录下通常还包含以下表 中的几个一级目录。</p><table><thead><tr><th>一级目录</th><th>功能（作用）</th></tr></thead><tbody><tr><td>/lost+found/</td><td>当系统意外崩溃或意外关机时，产生的一些文件碎片会存放在这里。在系统启动的过程中，fsck 工具会检查这里，并修复已经损坏的文件系统。这个目录只在每个分区中出现，例如，/lost+found 就是根分区的备份恢复目录，/boot/lost+found 就是 /boot 分区的备份恢复目录</td></tr><tr><td>/proc/</td><td>虚拟文件系统。该目录中的数据并不保存在硬盘上，而是保存到内存中。主要保存系统的内核、进程、外部设备状态和网络状态等。如 /proc/cpuinfo 是保存 CPU 信息的，/proc/devices 是保存设备驱动的列表的，/proc/filesystems 是保存文件系统列表的，/proc/net 是保存网络协议信息的…</td></tr><tr><td>/sys/</td><td>虚拟文件系统。和 /proc/ 目录相似，该目录中的数据都保存在内存中，主要保存与内核相关的信息</td></tr></tbody></table><h4 id="linux-usr目录"><a class="header-anchor" href="#linux-usr目录"># </a>Linux /usr目录</h4><p>  usr（注意不是 user），全称为 Unix Software Resource，此目录用于存储系统软件资源。FHS 建议所有开发者，应把软件产品的数据合理的放置在 /usr 目录下的各子目录中，而不是为他们的产品创建单独的目录。<br>  Linux 系统中，所有系统默认的软件都存储在 /usr 目录下，/usr 目录类似 Windows 系统中 C:\Windows\ + C:\Program files\ 两个目录的综合体。FHS 建议，/usr 目录应具备以下子目录。</p><table><thead><tr><th>子目录</th><th>功能（作用）</th></tr></thead><tbody><tr><td>/usr/bin/</td><td>存放系统命令，普通用户和超级用户都可以执行。这些命令和系统启动无关，在单用户模式下不能执行</td></tr><tr><td>/usr/sbin/</td><td>存放根文件系统不必要的系统管理命令，如多数服务程序，只有 root 可以使用。</td></tr><tr><td>/usr/lib/</td><td>应用程序调用的函数库保存位置</td></tr><tr><td>/usr/XllR6/</td><td>图形界面系统保存位置</td></tr><tr><td>/usr/local/</td><td>手工安装的软件保存位置。我们一般建议源码包软件安装在这个位置</td></tr><tr><td>/usr/share/</td><td>应用程序的资源文件保存位置，如帮助文档、说明文档和字体目录</td></tr><tr><td>/usr/src/</td><td>源码包保存位置。我们手工下载的源码包和内核源码包都可以保存到这里。不过笔者更习惯把手工下载的源码包保存到 /usr/local/src/ 目录中，把内核源码保存到 /usr/src/linux/ 目录中</td></tr><tr><td>/usr/include</td><td>C/C++ 等编程语言头文件的放置目录</td></tr></tbody></table><h4 id="linux-var-目录"><a class="header-anchor" href="#linux-var-目录"># </a>Linux /var 目录</h4><p>  /var 目录用于存储动态数据，例如缓存、日志文件、软件运行过程中产生的文件等。通常，此目录下建议包含如下所示的这些子目录。</p><table><thead><tr><th>/var子目录</th><th>功能（作用）</th></tr></thead><tbody><tr><td>/var/lib/</td><td>程序运行中需要调用或改变的数据保存位置。如 <a href="http://c.biancheng.net/mysql/" target="_blank" rel="noopener">MySQL</a> 的数据库保存在 /var/lib/mysql/ 目录中</td></tr><tr><td>/var/log/</td><td>登陆文件放置的目录，其中所包含比较重要的文件如 /var/log/messages, /var/log/wtmp 等。</td></tr><tr><td>/var/run/</td><td>一些服务和程序运行后，它们的 PID（进程 ID）保存位置</td></tr><tr><td>/var/spool/</td><td>里面主要都是一些临时存放，随时会被用户所调用的数据，例如 /var/spool/mail/ 存放新收到的邮件，/var/spool/cron/ 存放系统定时任务。</td></tr><tr><td>/var/www/</td><td>RPM 包安装的 Apache 的网页主目录</td></tr><tr><td>/var/nis和/var/yp</td><td>NIS 服务机制所使用的目录，nis 主要记录所有网络中每一个 client 的连接信息；yp 是 linux 的 nis 服务的日志文件存放的目录</td></tr><tr><td>/var/tmp</td><td>一些应用程序在安装或执行时，需要在重启后使用的某些文件，此目录能将该类文件暂时存放起来，完成后再行删除</td></tr></tbody></table><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>FHS（Filesystem Hierarchy Standard），文件系统层次化标准，该标准规定了 Linux 系统中所有一级目录以及部分二级目录（/usr 和 /var）的用途。发布此标准的主要目的就是为了让用户清楚地了解每个目录应该存放什么类型的文件。 <a href="#fnref1" class="footnote-backref">↩</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 服务器端 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统启动过程</title>
      <link href="/note/server/linux/LinuxBootProcess/"/>
      <url>/note/server/linux/LinuxBootProcess/</url>
      
        <content type="html"><![CDATA[<p>  Linux系统的启动，从计算机开机通电自检开始，一直到登陆系统，总共经历如下几个过程：</p><ol><li>服务器加电，加载 BIOS 信息，BIOS 进行系统检测。依照 BIOS 设定，找到第一个可以启动的设备（一般是硬盘）；</li><li>读取第一个启动设备的 MBR (主引导记录），加载 MBR 中的 Boot Loader（启动引导程序，最为常见的是 GRUB）。</li><li>依据 Boot Loader 的设置加载内核，内核会再进行一遍系统检测。系统一般会采用内核检测硬件的信息，而不一定采用 Bios 的自检信息。内核在检测硬件的同时，还会通过加载动态模块的形式加载硬件的驱动。</li><li>内核启动系统的第一个进程，也就是 /sbin/init。</li><li>由 /sbin/init 进程调用/etc目录下的init程序 ，来配置计算机的初始环境、确定系统的默认运行级别。</li><li>确定默认运行级别后，调用 /etc/init/rc.conf 配置文件初始化系统，然后执行 /etc/rc.d/rc.local 中的程序。</li><li>如果是终端界面启动，就可以看到登录界面了。如果是图形界面启动，就会调用相应的 X Window 接口。</li></ol><a id="more"></a><hr><p>  总的来说Linux启动过程大致分为五个过程:<code>BIOS启动-&gt;内核引导过程-&gt;运行init(初始化配置文件)-&gt;系统初始化-&gt;建立终端或载入用户登陆系统</code></p><h2 id="硬件启动与引导"><a class="header-anchor" href="#硬件启动与引导"># </a>硬件启动与引导</h2><h3 id="biso启动"><a class="header-anchor" href="#biso启动"># </a>BISO启动</h3><p>  BIOS 全称 Basic Input/Output System，中文可译为基本输入/输出系统。它是固化在主板上一个 ROM（只读存储器）芯片上的程序，主要保存计算机的基本输入/输出信息、系统设置信息、开机自检程和系统自启动程序，用来为 计算机提供最底层和最直接的硬件设置与控制。BIOS 的初始化主要完成以下 几 项工作：</p><ol><li>当 BIOS 一启动，就会检查计算机硬件和外围设备（例如 CPU、内存、风扇灯），整个自检过程也被称为 POST（Power On Self Test）自检。</li><li>如果自检没有问题，BIOS 开始对硬件进行初始化，并规定当前可启动设备的先后顺序，选择由那个设备来开机。</li><li>选择好开启设备后，就会从该设备的 MBR（主引导目录）中读取 Boot Loader（启动引导程序）并执行。启动引导程序用于引导操作系统启动，Linux系统中默认使用的启动引导程序是 GRUB。</li><li>当 MBR 被加载到 RAM 之后，BIOS 就会将控制权交给 MBR，进入系统引导的第二阶段。</li></ol><h3 id="读取mbr"><a class="header-anchor" href="#读取mbr"># </a>读取MBR</h3><p>  MBR 也就是主引导记录，最主要的功能就是存储启动引导程序。MBR位于硬盘的 0 磁道、0 柱面、1 扇区中，主要记录了启动引导程序和磁盘的分区表。MBR 共占用了一个扇区，也就是 512 Byte。其中 446 Byte 安装了启动引导程序，其后 64 Byte 描述分区表，最后的 2 Byte 是结束标记。</p><blockquote><p>MBR结构图：</p></blockquote><p><img src="/../assets/Linux/0/MDR%E7%BB%93%E6%9E%84%E5%9B%BE.jpg" alt="MDR结构图"></p><p>  之所以每块硬盘只能划分四个分区，原因就是在 MBR 中描述分区表的空间只有 64 Byte。其中每个分区必须占用 16 Byte，那么 64 Byte 就只能划分 4 个主分区。每个分区的 16 字节的规划如表 ：</p><table><thead><tr><th style="text-align:center">存储字节</th><th style="text-align:center">数据内容及含义</th></tr></thead><tbody><tr><td style="text-align:center">第 1 字节</td><td style="text-align:center">引导标志</td></tr><tr><td style="text-align:center">第 2 字节</td><td style="text-align:center">本分区的起始磁道号</td></tr><tr><td style="text-align:center">第 3 字节</td><td style="text-align:center">本分区的起始扇区号</td></tr><tr><td style="text-align:center">第 4 字节</td><td style="text-align:center">本分区的起始柱面号</td></tr><tr><td style="text-align:center">第 5 字节</td><td style="text-align:center">分区类型，可以识别主分区和扩展分区</td></tr><tr><td style="text-align:center">第 6 字节</td><td style="text-align:center">本分区的结束磁道号</td></tr><tr><td style="text-align:center">第 7 字节</td><td style="text-align:center">本分区的结束扇区号</td></tr><tr><td style="text-align:center">第 8 字节</td><td style="text-align:center">本分区的结束柱面号</td></tr><tr><td style="text-align:center">第 9~12 字节</td><td style="text-align:center">本分区之前已经占用的扇区数</td></tr><tr><td style="text-align:center">第 13~16 字节</td><td style="text-align:center">本分区的总扇区数</td></tr></tbody></table><h4 id="启动引导程序的作用"><a class="header-anchor" href="#启动引导程序的作用"># </a>启动引导程序的作用</h4><p>  BIOS 的作用就是自检，然后从 MBR 中读取出启动引导程序，所以，启动引导程序最主要的作用就是加载操作系统的内核。由于每种操作系统的文件格式不同，因此每种操作系统的启动引导程序也不一样。不同的操作系统只有使用自己的启动引导程序才能加载自己的内核。如果服务器中安装了多个操作系统，而 MBR 只有一 个，那么明显是不够用的。</p><p>  然而每块硬盘只能有一个 MBR 是不能更改的，所以不可能増加 MBR 的数量。系统只能在每个文件系统（可以看成分区）中单独划分出一个扇区，称作引导扇区（Boot Sector)。每个分区的引导扇区中也能安装启动引导程序，也就是说，在 MBR 和每个单独分区的引导扇区中都可以安装启动引导程序。这样多个操作系统才能安装在同一台服务器中（每个操作系统要安装在不同的分区中），而且每个操作系统都是可以启动的。</p><p>  但是BIOS 只能找到 MBR 中的启动引导程序，而找不到在分区的引导扇区中的启动引导程序。如果要想完成多系统启动，那么就要増加启动引导程序的功能，让安装到 MBR 中的启动引导程序（GRUB）来调用在分区的引导扇区中的其他启动引导程序。</p><p>因此，启动引导程序拥有以下功能：</p><ol><li>加载操作系统的内核。这是启动引导程序最主要的功能。</li><li>拥有一个可以让用户选择的菜单，来选择到底启动哪个系统。大家如果在服务器上安装过双 Windows 系统，就应该见过类似的选择菜单，不过这个选择菜单是由 Windows 的启动引导程序提供的，而不是 GRUB。</li><li>可以调用其他的启动引导程序，这是多系统启动的关键。不过需要注意的是，Windows 的启动引导程序不能调用 Linux的启动引导程序，所以我们一般建议先安装 Windows，后安装 Linux，是为了将 Linux 的启动引导程序安装到 MBR 中，覆盖 Windows 的启动引导程序。</li></ol><p>启动引导程序的作用示意图：</p><img src="/../assets/Linux/0/MBR的作用.jpg" alt="MBR的作用" style="zoom:125%;"><h2 id="linux内核模块加载"><a class="header-anchor" href="#linux内核模块加载"># </a>Linux内核模块加载</h2><p>  GRUB 加载了内核之后，内核首先会再进行二次系统的自检，而不一定使用 BIOS 检测的硬件信息。这时内核终于开始替代 BIOS 接管 Linux的启动过程了。</p><p>  内核再次系统自检后，就会开始动态加载每个硬件的模块，这个动态模块大家可以想象成硬件的驱动<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。Linux 的内核存放在 /boot 的启动目录中。</p><figure class="highlight bash"><figcaption><span>/boot目录</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#ls /boot/</span></span><br><span class="line">config-2.6.32-279.el6.i686 <span class="comment">#内核的配置文件，内核编译时选择的功能与模块</span></span><br><span class="line">efi <span class="comment">#可扩展固件接口，为英特尔为全新PC固件的体系结构、接口和服务提出的建议标准</span></span><br><span class="line">grub <span class="comment">#启动引导程GTUB的数据目录</span></span><br><span class="line">initramfe-2.6.32-279.el6.i686.img <span class="comment">#虚拟文件系统（CentOS 6.x 中用initramfs替代了initrd,但功能是一样的）</span></span><br><span class="line">lost+found <span class="comment"># boot分区的备份目录</span></span><br><span class="line">symvers-2_6.32-279.el6.i686.gz <span class="comment">#模块符号信息</span></span><br><span class="line">System.map-2.6.32-279.el6.i686 <span class="comment">#内核功能和内存地址的对应列表</span></span><br><span class="line">vmlinuz-2.6.32-279.el6.i686 <span class="comment">#用于启动的Linux内核。这个文件是一个压缩的内核镜像</span></span><br></pre></td></tr></table></figure><p>  Linux 为了保证了内核不会过大，会把不重要的功能编译成内核模块，在需要时再调用。在多数 Linux 中，都会把硬件的驱动程序编译为模块， 这些模块保存在 /lib/modules 目录中。常见的 USB、SATA 和 SCSI 等硬盘设备的驱动，还有一些特殊的文件系统（如 LVM、RAID 等）的驱动，都是以模块的方式来保存的。</p><p>  如果 Linux 安装在 IDE 硬盘之上，并且采用的是默认的 ext3/4 文件系统，那么内核启动后加载根分区和模块的加载都没有什么问题。如果要将 Linux 安装在 SCSI 硬盘之上，或者采用的是 LVM 文件系统，那么内核（内核载入内存是启动引导程序 GRUB 调用的，并不存在硬盘驱动不识别的问题）在加载根目录之前是需要加载 SCSI 硬盘或 LVM 文件系统的驱动的。而SCSI 硬盘和 LVM 文件系统的驱动都放在硬盘的 /lib/modules 目录中，内核没有办法识别 ，因此Linux 采用了 initramfs 这个虚拟文件系统来处理这个问题。</p><h3 id="initramfe虚拟文件系统"><a class="header-anchor" href="#initramfe虚拟文件系统"># </a>initramfe虚拟文件系统</h3><p>  CentOS 6.x 中使用 initramfs 虚拟文件系统取代了 CentOS 5.x 中的 initrd RAM Disk。它们的作用类似，可以通过 initramfs 虚拟文件系统在内存中模拟出一个根目录，然后在这个模拟根目录中加载 SCSI 等硬件的驱动，就可以加载真正的根目录了，之后才能调用 Linux 的第一个进程 /sbin/init。</p><p>Initramfs 虚拟文件系统主要有以下优点：</p><ul><li>initramfs 随着其中数据的増减自动増减容量。</li><li>在 initramfs 和页面缓存之间没有重复数据。</li><li>initramfs 重复利用了 Linux caching 的代码，因此几乎没有増加内核尺寸，而 caching 的代码已经经过良好测试，所以 initramfs 的代码质量也有保证。</li><li>不需要额外的文件系统驱动</li></ul><img src="/../assets/Linux/0/initramfe虚拟文件系统.jpg" alt="initramfe虚拟文件系统" style="zoom:125%;"><hr><p>  内核启动后，首先会去解析grub的配置文件<code>/boot/grub/grub.conf</code>，然后加载内核镜像到内存中，并将控制权转交给内核。而内核会立即初始化系统中各设备并做相关的配置工作，其中包括CPU、I/O、存储设备等。在内核加载完毕，系统开始运行第一个进程。</p><h2 id="第一个进程：init"><a class="header-anchor" href="#第一个进程：init"># </a>第一个进程：init</h2><p>  在内核加载完毕，并完成硬件检测与驱动程序加载后，此时主机硬件已经准备完毕，内核会主动呼叫第一个进程，也就是 /sbin/init，此配置文件最主要的功能就是准备软件执行的环境，包括系统的主机名、网络设定、语言、文件系统格式及其他服务的启动等。</p><p>  由于Linux内核的不断发展，各个发行版、各个版本的操作系统，采用的init程序配置系统完全不同。基本上是由 /sbin/init 进程来 <strong>配置计算机的初始环境</strong> 和 <strong>确定系统的默认运行级别</strong>。</p><p>  例如在 CentOS 6.x 系统中，由于用 Upstart 启动服务来替换以前的 init，所以在 /etc/inittab 配置文件中只能定义系统的默认运行级别，而其他的功能是靠 /etc/init/ 目录中的其他配置文件实现的。</p><blockquote><p>init程序的类型举例：</p><ul><li><p><strong>SysV:</strong> init, CentOS 5之前, 配置文件： <code>/etc/inittab。</code></p></li><li><p><strong>Upstart:</strong> init,CentOS 6, 配置文件：<code>/etc/inittab</code>,<code>/etc/init/*.conf。</code></p></li><li><p><strong>Systemd：</strong> systemd, CentOS 7,配置文件：<code>/usr/lib/systemd/system</code>、<code>/etc/systemd/system</code>。</p></li></ul><p>关于init系统的介绍，可以阅读以下文章：</p><ul><li><a href="https://www.ibm.com/developerworks/cn/linux/1407_liuming_init1/index.html" target="_blank" rel="noopener">浅谈SysVinit</a></li><li><a href="https://www.ibm.com/developerworks/cn/linux/1407_liuming_init2/index.html" target="_blank" rel="noopener">浅谈Upstart</a></li><li><a href="https://www.ibm.com/developerworks/cn/linux/1407_liuming_init3/index.html" target="_blank" rel="noopener">浅谈Systemd</a></li></ul></blockquote><h3 id="配置计算机的初始环境"><a class="header-anchor" href="#配置计算机的初始环境"># </a>配置计算机的初始环境</h3><p>  以centos 6采用的Upstart系统举例， /sbin/init 进程通过 /etc/init/rcS.conf 配置文件，分别找到 /etc/rc.d/rc.sysinit 配置文件和 /etc/inittab 配置文件，前者用于初始化系统，配置计算机的初始环境；后者用于确定系统的默认运行级别。用 Vim 查看 /etc/rc.d/rc.sysinit 配置文件，就会发现这个这个配置文件主要进行了以下几项工作：</p><ul><li>获得网络环境和主机类型；</li><li>测试设备：除了挂载内存设备 /proc 之外，还会主动侦测系统上是否具有 usb 设备，如果有，则会主动加载 usb 的驱动程序，并尝试挂载 usb 文件系统；</li><li>开机启动画面 Plymouth（代替了以往的 RHGB）；</li><li>判断是否启用 SELinux；</li><li>显示开机过程中的欢迎画面；</li><li>初始化硬件；</li><li>用户自定义模块的加载，用户可以在<code>/etc/sysconfig/modules/*.modules</code> 加入自订的模块，则此时会被加载到系统当中；</li><li>配置内核的参数，系统会主动去读取<code>/etc/sysctl.conf</code>这个文件的配置参数，使内核的功能成为我们想要的样子。</li><li>设置主机名。</li><li>同步存储器。</li><li>设备映射器及相关的初始化。</li><li>初始化软件磁盘阵列 (RAID)。</li><li>初始化 LVM 的文件系统功能。</li><li>检验磁盘文件系统 (fsck)。</li><li>设置磁盘配额 (quota)。</li><li>重新以可读写模式挂载系统磁盘。</li><li>更新 quota (非必要)。</li><li>启动系统虚拟随机数生成器。</li><li>配置机器（非必要）。</li><li>清除开机过程中的临时文件。</li><li>创建 ICE 目录。</li><li>启动交换分区（swap）。</li><li>将开机信息写入<code>/var/log/dmesg</code> 文件中。</li></ul><p>  <code>/etc/rc.d/rc.sysinit</code>配置文件已经将基本的系统配置数据都写好了，我们可以查询 <code>/var/log/dmesg</code>文件或使用 dmesg 命令查看系统在启动时到底发生了什么。当然，我们也可以通过这个命令来看看 Linux 服务器的硬件信息。</p><h3 id="配置运行级别"><a class="header-anchor" href="#配置运行级别"># </a>配置运行级别</h3><p>  在 CentOS 6.x 中，/etc/inittab 配置文件只能用来设置系统的默认运行级别。而在systemd 系统中，采用目标（target）替代了运行级别的概念，这里展示了Sysvinit 运行级别和 systemd 目标的对应表。</p><table><thead><tr><th style="text-align:center">Sysvinit 运行级别</th><th style="text-align:center">Systemd 目标</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">runlevel0.target, poweroff.target</td><td style="text-align:center">关闭系统。</td></tr><tr><td style="text-align:center">1, s, single</td><td style="text-align:center">runlevel1.target, rescue.target</td><td style="text-align:center">单用户模式。可以想象为 Windows 的安全模式，主要用于系统修复</td></tr><tr><td style="text-align:center">2, 4</td><td style="text-align:center">runlevel2.target, runlevel4.target, multi-user.target</td><td style="text-align:center">用户定义,不含 NFS 服务/域特定运行级别。默认等同于 3。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">runlevel3.target, multi-user.target</td><td style="text-align:center">多用户，非图形化。用户可以通过多个控制台或网络登录。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">runlevel5.target, graphical.target</td><td style="text-align:center">多用户，图形化。通常为所有运行级别 3 的服务外加图形化登录。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">runlevel6.target, reboot.target</td><td style="text-align:center">重启</td></tr><tr><td style="text-align:center">emergency</td><td style="text-align:center">emergency.target</td><td style="text-align:center">紧急 Shell</td></tr></tbody></table><p>在 Linux 系统中可以使用 runlevel 命令来查看系统的运行级别，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># runlevel</span></span><br></pre></td></tr></table></figure><h2 id="系统初始化"><a class="header-anchor" href="#系统初始化"># </a>系统初始化</h2><p>  以centos6 为例子，在init的配置文件中有这么一行：<code>si::sysinit:/etc/rc.d/rc.sysinit</code>　它调用执行了<code>/etc/rc.d/rc.sysinit</code>，而rc.sysinit是一个bash shell的脚本，是每一个运行级别都要首先运行的重要脚本。在其中会有类似这样的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l5:5:<span class="built_in">wait</span>:/etc/rc.d/rc 5</span><br></pre></td></tr></table></figure><p>  其中数字5就是我们要运行的运行级别，这一行表示以5为参数运行<code>/etc/rc.d/rc</code>。<code>/etc/rc.d/rc</code>是一个Shell脚本，它接受5作为参数，去执行 <code>/etc/rc.d/rc5.d/</code>目录下的所有的rc启动脚本，<code>/etc/rc.d/rc5.d/</code>目录中的这些启动脚本实际上都是一些连接文件，而不是真正的rc启动脚本，真正的rc启动脚本实际上都是放在<code>/etc/rc.d/init.d</code>/目录下。这些rc启动脚本有着类似的用法，它们一般能接受start、stop、restart、status等参数。</p><p>  <code>/etc/rc.d/rc5.d/</code>中的rc启动脚本通常是K或S开头的连接文件，对于以 S 开头的启动脚本，将以start参数来运行。而如果发现存在相应的脚本也存在K打头的连接，而且已经处于运行态了(以<code>/var/lock/subsys/</code>下的文件作为标志)，则将首先以stop为参数停止这些已经启动了的守护进程，然后再重新运行。这样做是为了保证是当init改变运行级别时，所有相关的守护进程都将重启。</p><p>  在每个运行级中将运行哪些守护进程，用户可以通过chkconfig或setup中的&quot;System Services&quot;来自行设定。</p><h3 id="载入自定义配置"><a class="header-anchor" href="#载入自定义配置"># </a>载入自定义配置</h3><p>  在<code>/etc/rc.d/rc[0-6].d</code> 目录中的程序启动之后，系统的启动就已经完成。不过，我们总有一些程序是需要在系统启动之后随着系统一起启动的。这时我们并不需要自己把需要启动的服务链接到 /etc/rc3.d/ 目录中，因为系统给我们准备了 /etc/rc.d/rc.local 配置文件。</p><p>  这个配置文件会在用户登陆之前读取，这个文件中写入了什么命令，在每次系统启动时都会执行一次。也就是说，如果有任何需要在系统启动时运行的工作，则只需写入 /etc/rc.d/rc.local 配置文件即可。这个文件的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll /etc/rc.local</span><br><span class="line">Irwxrwxrwx. 1 root root 13 4月10 21:46 /etc/rc.local -&gt; rc.d/rc.local</span><br><span class="line">#有一个链接文件，两个文件修改哪一个都可以</span><br><span class="line">[root@localhost ~]#vi /etc/rc.d/rc.local</span><br><span class="line">#!/bin/sh</span><br><span class="line">#</span><br><span class="line">#This script will be executed *after* all the other init scripts.</span><br><span class="line">#You can put your own initialization stuff in here if you don&apos;t</span><br><span class="line">#want to do the full Sys V style init stuff.</span><br><span class="line">touch /var/lock/subsys/local</span><br><span class="line">#默认会touch这个文件，每次系统启动时都会touch这个文件，这个文件的修改时间就是系统的启动时间</span><br><span class="line">/etc/rc.d/init.d/httpd start</span><br><span class="line">#如果写入RPM包安装的apache服务的启动命令，apache服务就会在开机时自动启动</span><br></pre></td></tr></table></figure><h2 id="建立终端和用户登录系统"><a class="header-anchor" href="#建立终端和用户登录系统"># </a>建立终端和用户登录系统</h2><h3 id="建立终端"><a class="header-anchor" href="#建立终端"># </a>建立终端</h3><p>  在启动过程中还有一个配置文件会生效，就是 /etc/init/start-ttys.conf，这个文件主要定义了 Linux 支持的 1~6 个本地终端（tty[1-6])。</p><p>  在inittab中的以下6行定义了6个终端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1:2345:respawn:/sbin/mingetty tty1</span><br><span class="line">2:2345:respawn:/sbin/mingetty tty2</span><br><span class="line">3:2345:respawn:/sbin/mingetty tty3</span><br><span class="line">4:2345:respawn:/sbin/mingetty tty4</span><br><span class="line">5:2345:respawn:/sbin/mingetty tty5</span><br><span class="line">6:2345:respawn:/sbin/mingetty tty6</span><br></pre></td></tr></table></figure><p>  从上面可以看出在2、3、4、5的运行级别中都将以respawn方式运行mingetty程序，mingetty程序能打开终端、设置模式。同时它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，当我们看到mingetty的登录界面时，我们就可以输入用户名和密码来登录系统了。</p><h3 id="用户登陆系统"><a class="header-anchor" href="#用户登陆系统"># </a>用户登陆系统</h3><p>一般来说，用户的登录方式有三种：</p><ul><li>命令行登录</li><li>ssh登录</li><li>图形界面登录</li></ul><p>  对于运行级别为5的图形方式用户来说，他们的登录是通过一个图形化的登录界面。登录成功后可以直接进入 KDE、Gnome 等窗口管理器。</p><p>  当通过mingetty登录时，Linux 的账号验证程序是 login，login 会接收 mingetty 传来的用户名作为用户名参数，然后对用户名进行分析：如果用户名不是 root，且存在 /etc/nologin 文件，login 将输出 nologin 文件的内容，然后退出。这通常用来系统维护时防止非root用户登录。只有/etc/securetty中登记了的终端才允许 root 用户登录，如果不存在这个文件，则 root 用户可以在任何终端上登录。/etc/usertty文件用于对用户作出附加访问限制，如果不存在这个文件，则没有其他限制。</p><h3 id="图形模式与文字模式的切换方式"><a class="header-anchor" href="#图形模式与文字模式的切换方式"># </a>图形模式与文字模式的切换方式</h3><p>  Linux预设提供了六个命令窗口终端机让我们来登录。</p><p>  默认我们登录的就是第一个窗口，也就是tty1，这个六个窗口分别为tty1,tty2 … tty6，你可以按下Ctrl + Alt + F1 ~ F6 来切换它们。</p><p>  如果你安装了图形界面，默认情况下是进入图形界面的，此时你就可以按Ctrl + Alt + F1 ~ F6来进入其中一个命令窗口界面。当你进入命令窗口界面后再返回图形界面只要按下Ctrl + Alt + F7 就回来了。</p><p>  如果你用的vmware 虚拟机，命令窗口切换的快捷键为 Alt + Space + F1~F6. 如果你在图形界面下请按Alt + Shift + Ctrl + F1~F6 切换至命令窗口。</p><hr><p>至此Linux启动完成，流程图如下</p><img src="/../assets/Linux/0/Linux启动过程.jpg" alt="Linux启动过程" style="zoom:125%;"><h2 id="linux-关机"><a class="header-anchor" href="#linux-关机"># </a>Linux 关机</h2><p>  在linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。</p><p>  正确的关机流程为：sync &gt; shutdown &gt; reboot &gt; halt</p><p>  关机指令为：shutdown ，你可以man shutdown 来看一下帮助文档。例如你可以运行如下命令关机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sync 将数据由内存同步到硬盘中。</span><br><span class="line"></span><br><span class="line">shutdown 关机指令，你可以man shutdown 来看一下帮助文档。例如你可以运行如下命令关机：</span><br><span class="line"></span><br><span class="line">shutdown –h 10 ‘This server will shutdown after 10 mins’ 这个命令告诉大家，计算机将在10分钟后关机，并且会显示在登陆用户的当前屏幕中。</span><br><span class="line"></span><br><span class="line">shutdown –h now 立马关机</span><br><span class="line"></span><br><span class="line">shutdown –h 20:25 系统会在今天20:25关机</span><br><span class="line"></span><br><span class="line">shutdown –h +10 十分钟后关机</span><br><span class="line"></span><br><span class="line">shutdown –r now 系统立马重启</span><br><span class="line"></span><br><span class="line">shutdown –r +10 系统十分钟后重启</span><br><span class="line"></span><br><span class="line">reboot 就是重启，等同于 shutdown –r now</span><br><span class="line"></span><br><span class="line">halt 关闭系统，等同于shutdown –h now 和 poweroff</span><br></pre></td></tr></table></figure><hr><p>  最后总结一下，不管是重启系统还是关闭系统，首先要运行 <strong>sync</strong> 命令，把内存中的数据写到磁盘中。</p><p>  关机的命令有 <strong>shutdown –h now halt poweroff</strong> 和 <strong>init 0</strong> , 重启系统的命令有 <strong>shutdown –r now reboot init 6</strong>。</p><blockquote><p><strong>参考文档地址：</strong></p><p><em>IBM Develope：<a href="https://www.ibm.com/developerworks/cn/linux/l-linuxboot/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/l-linuxboot/index.html</a></em></p><p><em>C语言中文网：<a href="http://c.biancheng.net/view/1014.html" target="_blank" rel="noopener">http://c.biancheng.net/view/1014.html</a></em></p><p>菜鸟教程：<a href="https://www.runoob.com/linux/linux-system-boot.html" target="_blank" rel="noopener">https://www.runoob.com/linux/linux-system-boot.html</a></p></blockquote><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>默认 Linux 硬件的驱动是不需要手工安装的，如果是重要的功能，则会直接编译到内核当中；如果是非重要的功能，比如硬件驱动会编译为模块，则在需要时由内核调用。不过，如果没有被内核硬件，要想驱动，就需要手工安装个硬件的硬块了。 <a href="#fnref1" class="footnote-backref">↩</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 服务器端 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络常识</title>
      <link href="/note/network/BaseKnowledgeOfNetwork/"/>
      <url>/note/network/BaseKnowledgeOfNetwork/</url>
      
        <content type="html"><![CDATA[<h2 id="一-计算机网络发展的7个阶段"><a class="header-anchor" href="#一-计算机网络发展的7个阶段"># </a>一、计算机网络发展的7个阶段</h2><h3 id="第一阶段：批处理阶段"><a class="header-anchor" href="#第一阶段：批处理阶段"># </a>第一阶段：批处理阶段</h3><p>  批处理(Batch Processing)系统的出现是为了方便多人使用统一计算机而设计的。主要过程就是把卡带插入读卡机，计算机读取并计算，最后把结果通过打印机输出。</p><blockquote><p>批处理系统示意图</p></blockquote><p><img src="/assets/network/%E6%89%B9%E5%A4%84%E7%90%86.png" alt="批处理" title="批处理示意图"><br>  早期的计算机体积大，价格昂贵，通常只能在固定的场所使用，而且操作复杂，实际运行的时候有专门的操作员来处理。计算机效率低，需要等待几天才能来取。因此，批处理主要用于大规模的计算和处理，只有少数人和部门才能使用。</p><a id="more"></a><h3 id="第二阶段：分时系统"><a class="header-anchor" href="#第二阶段：分时系统"># </a>第二阶段：分时系统</h3><p>  分时系统(TSS:Time Sharing System)在20世纪60年代开始出现并流行起来。它能让多个终端与一个计算机相连，并同时使用一台计算机系统。当时计算机价格高昂，一人一台计算机不太现实，只好就通过分时系统来实现。这样每个人都能貌似独立使用计算机了(独占性)。</p><p>  分时系统有以下几个特点：<strong>多路性</strong>，<strong>独占性</strong>，<strong>交互性</strong>，<strong>及时性</strong>。</p><blockquote><p>分时系统示意图：</p></blockquote><p><img src="/assets/network/%E5%88%86%E6%97%B6%E7%B3%BB%E7%BB%9F.jpeg" alt="分时系统示意图" title="分时系统示意图"></p><p>  终端系统类似于现在的桌面系统，采取交互式操作，终端发送指令给主机，主机将计算结果立即输出。因此，像BASIC这样的语言普及开来，更多的人可以使用计算机，小型机也随机产生。</p><h3 id="第三阶段：计算机之间的通信"><a class="header-anchor" href="#第三阶段：计算机之间的通信"># </a>第三阶段：计算机之间的通信</h3><p>  20世纪70年代，计算机性能逐步增长，体积逐渐减小，价格也逐渐降低，企业开始普及计算机。为了方便内部通信，减少磁带，软盘💾等存储介质使用，计算机之间开始链接通信线路。</p><blockquote><p>计算机内部通信示意图</p></blockquote><p><img src="/assets/network/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1.jpeg" alt="计算机之间通信"></p><p>  本部门的终端向通过本部门的计算机向外部门的计算机发送指令，最后再传回本部门的计算机并返回给对应终端。</p><h3 id="第四阶段：计算机网络"><a class="header-anchor" href="#第四阶段：计算机网络"># </a>第四阶段：计算机网络</h3><p>  最初的终端只能和同一厂商统一系统的计算机交互，不利于信息的传递。20世纪80年代开始，随着小型机和家用电脑的普及，为了方便不同种类，不同系统之间的通信，厂商设计了一种计算网络系统，可以通过窗口操作系统，实现个人计算机与不同种类的计算机之间的通信。</p><blockquote><p>不同网络设备的之间的通信示意图</p></blockquote><p><img src="/assets/network/%E4%B8%8D%E5%90%8C%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E7%9A%84%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg" alt="不同网络设备的之间的通信示意图"></p><h3 id="第五阶段：互联网普及"><a class="header-anchor" href="#第五阶段：互联网普及"># </a>第五阶段：互联网普及</h3><p>  20世纪90年代，个人电脑已经普及，性能也大幅提升，很多个人电脑的性能不输给unix工作站，因此很多数据处理都有个人主机来完成。通过计算机“瘦身”运动，很多公司的核心系统都转移到个人电脑上。E-mail，万维网(www:world wide web)等信息传递方式逐渐普及，方便了异构计算机之间的快速通信。</p><blockquote><p>互联网示意图</p></blockquote><p><img src="/assets/network/%E4%BA%92%E8%81%94%E7%BD%91%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg" alt="互联网示意图"></p><h3 id="第六阶段：互联网中心时代"><a class="header-anchor" href="#第六阶段：互联网中心时代"># </a>第六阶段：互联网中心时代</h3><p>  互联网的普及改变了通信领域，很多不同的网络技术也想互联网靠拢，电话网，电视网逐渐被IP(Internet Protocol)网取代。</p><blockquote><p>互联网技术为中心</p></blockquote><p><img src="/assets/network/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%80%E6%9C%AF%E4%B8%BA%E4%B8%AD%E5%BF%83.jpeg" alt="互联网技术为中心"></p><h3 id="第七阶段：安全通信"><a class="header-anchor" href="#第七阶段：安全通信"># </a>第七阶段：安全通信</h3><p>  互联网实现了信息搜索，沟通交流，共享信息，新闻报道，远程控制等功能，成为了国家社会的基础设施最重要的环节。在便利的同时也带来了很多问题，例如信息泄露，病毒危害，网络诈骗等。计算机网路的发展已经从“简单快速的连接”转变为“安全可靠的连接”。</p><h2 id="二-网络协议"><a class="header-anchor" href="#二-网络协议"># </a>二、网络协议</h2><blockquote><p><strong>协议的定义:</strong> 协议就是计算机与计算机之间通过网络实现通信时事先达成的一种“约定”。这种“约定”使那些由不同厂商的设备、不同的CPU以及不同的操作系统组成的计算机之间，只要遵循相同的协议就能够实现通信。反之，如果所使用的协议不同，就无法实现通信。这就好比两个人使用不同国家的语言说话，怎么也无法相互理解。协议可以分为很多种，每一种协议都明确地界定了它的行为规范。两台计算机之间必须能够支持相同的协议，并遵循相同协议进行处理，这样才能实现相互通信。</p></blockquote><h3 id="常见网络协议"><a class="header-anchor" href="#常见网络协议"># </a>常见网络协议</h3><table><thead><tr><th style="text-align:center">网络体系结构</th><th style="text-align:center">协议</th><th style="text-align:center">主要用途</th></tr></thead><tbody><tr><td style="text-align:center">TCP/IP</td><td style="text-align:center">IP,ICMP,TCP,UDP,HTTP,TELNET,SNTP,SMTP…</td><td style="text-align:center">互联网，局域网</td></tr><tr><td style="text-align:center">IPX/SPX(NetWare)</td><td style="text-align:center">IPX,SPX,NPC…</td><td style="text-align:center">个人电脑局域网</td></tr><tr><td style="text-align:center">AppleTalk</td><td style="text-align:center">DDP,RTMP,AEP,ATP,ZIP…</td><td style="text-align:center">苹果公司产品局域网</td></tr></tbody></table><h3 id="协议诞生及标准化"><a class="header-anchor" href="#协议诞生及标准化"># </a>协议诞生及标准化</h3><ol><li>1974年，IBM发布SNA，将本公司的通信协议公之于众，其他厂商也纷纷发布自己的协议，引发了众多协议的系统话进程，但是协议之间并不兼容，无法实现通信</li><li>ISO制定了一个国际标准OSI(Open System Interconnection: “开放式通信系统互联参考模型”)。OSI并未普及但是OSI参考模型常被用于网络协议的制定当中。</li><li>IETF所建立的TCP/IP模型，被大学等研究机构和计算机行业推行，成为互联网协议的行业标准。</li></ol><h3 id="协议分层与osi参考模型"><a class="header-anchor" href="#协议分层与osi参考模型"># </a>协议分层与OSI参考模型</h3><p>  协议分层使得复杂的的网络协议简单化。每一个分层接受下一层提供的服务，并负责向上一层提供服务，上下层之间的交互遵循的约定叫 <strong>“接口”</strong> ,同一层交互遵循的约定叫 <strong>“协议”</strong> 。</p><p> OSI模型将协议分为七层：</p><p><img src="/assets/network/OSI%E6%A8%A1%E5%9E%8B.png" alt="OSI模型"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 网络 </tag>
            
            <tag> OSI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6中的数据类型判断</title>
      <link href="/note/web/ecmascript/es6%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD/"/>
      <url>/note/web/ecmascript/es6%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="es6中的数据类型判断的几种方式"><a class="header-anchor" href="#es6中的数据类型判断的几种方式"># </a>ES6中的数据类型判断的几种方式</h2><h3 id="1-typeof"><a class="header-anchor" href="#1-typeof"># </a>1.typeof</h3><p>typeof 是一个操作符，其右侧跟一个一元表达式，并返回这个表达式的数据类型,返回的结果用该类型的字符串(全小写字母)形式表示，包括以下 7 种：</p><ul><li>number、</li><li>boolean、</li><li>symbol、</li><li>string、</li><li>object、</li><li>undefined、</li><li>function 等。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="string">''</span>; <span class="comment">// string 有效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">1</span>; <span class="comment">// number 有效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="built_in">Symbol</span>(); <span class="comment">// symbol 有效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span>; <span class="comment">//boolean 有效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span>; <span class="comment">//undefined 有效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span>; <span class="comment">//object 无效</span></span><br><span class="line"><span class="keyword">typeof</span> [] ; <span class="comment">//object 无效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Function</span>(); <span class="comment">// function 有效</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Date</span>(); <span class="comment">//object 无效</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>总结：</strong></p><ul><li>对于基本类型，除 null 以外，均可以返回正确的结果。</li><li>对于引用类型，除 function 以外，一律返回 object 类型。</li><li>对于 null ，返回 object 类型。</li><li>对于 function 返回 function 类型。</li></ul><h3 id="2-instanceof"><a class="header-anchor" href="#2-instanceof"># </a>2.instanceof</h3><ul><li>instanceof 检测的是原型对象。</li><li>instanceof 是用来判断 A 是否为 B 的实例，表达式为：A instanceof B。</li><li>如果 A 是 B 的实例，则返回 true,否则返回 false。</li><li>当 A 的 <strong>proto</strong> 指向 B 的 prototype 时，就认为 A 就是 B 的实例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[] <span class="keyword">instanceof</span> <span class="built_in">Array</span>; <span class="comment">// true</span></span><br><span class="line">&#123;&#125; <span class="keyword">instanceof</span> <span class="built_in">Object</span>;<span class="comment">// true</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>() <span class="keyword">instanceof</span> <span class="built_in">Date</span>;<span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="keyword">new</span> Person() <span class="keyword">instanceof</span> Person;</span><br><span class="line"></span><br><span class="line">[] <span class="keyword">instanceof</span> <span class="built_in">Object</span>; <span class="comment">// true</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>() <span class="keyword">instanceof</span> <span class="built_in">Object</span>;<span class="comment">// true</span></span><br><span class="line"><span class="keyword">new</span> Person <span class="keyword">instanceof</span> <span class="built_in">Object</span>;<span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>原型链举例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[].__proto__ --&gt; <span class="built_in">Array</span>.prototype</span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>.prototype.__proto__ --&gt; <span class="built_in">Object</span>.prototype</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.prototype.__proto__ --&gt;<span class="literal">null</span></span><br></pre></td></tr></table></figure><p><strong>问题总结：</strong></p><ul><li>instanceof 只能用来判断两个对象是否属于实例关系，而不能判断一个对象实例具体属于哪种类型。</li><li>它假定只有一个全局执行环境。如果网页中包含多个框架，那实际上就存在两个以上不同的全局执行环境，从而存在两个以上不同版本的构造函数。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(iframe);</span><br><span class="line">xArray = <span class="built_in">window</span>.frames[<span class="number">0</span>].Array;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> xArray(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">// [1,2,3]</span></span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>ES5 提供了 Array.isArray() 方法 。该方法用以确认某个对象本身是否为 Array 类型，而不区分该对象在哪个环境中创建。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(value))&#123;</span><br><span class="line">   <span class="comment">//对数组执行某些操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Array.isArray() 本质上检测的是对象的 [[Class]] 值，[[Class]] 是对象的一个内部属性，里面包含了对象的类型信息，其格式为 [object Xxx] ，Xxx 就是对应的具体类型 。对于数组而言，[[Class]] 的值就是 [object Array] 。</p><h3 id="3-constructor"><a class="header-anchor" href="#3-constructor"># </a>3.constructor</h3><ul><li>当一个函数 F被定义时，JS引擎会为F添加 prototype 原型，然后再在 prototype上添加一个 constructor 属性，并让其指向 F 的引用</li><li>当执行 var f = new F() 时，F 被当成了构造函数，f 是F的实例对象，此时 F 原型上的 constructor 传递到了 f 上，因此 f.constructor == F</li><li>F 利用原型对象上的 constructor 引用了自身，当 F 作为构造函数来创建对象时，原型上的 constructor 就被遗传到了新创建的对象上， 从原型链角度讲，构造函数 F 就是新对象的类型。这样做的意义是，让新对象在诞生以后，就具有可追溯的数据类型。</li></ul><p><strong>注意：</strong></p><ul><li>null 和 undefined 是无效的对象，因此是不会有 constructor 存在的，这两种类型的数据需要通过其他方式来判断。</li><li>函数的 constructor 是不稳定的，这个主要体现在自定义对象上，当开发者重写 prototype 后，原有的 constructor 引用会丢失，constructor 会默认为 Object</li></ul><h3 id="4-tostring"><a class="header-anchor" href="#4-tostring"># </a>4.toString</h3><ul><li>toString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。</li><li>对于 Object 对象，直接调用 toString()  就能返回 [object Object] 。而对于其他对象，则需要通过 call / apply 来调用才能返回正确的类型信息。</li></ul> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="string">''</span>) ;   <span class="comment">// [object String]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="number">1</span>) ;    <span class="comment">// [object Number]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="literal">true</span>) ; <span class="comment">// [object Boolean]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="built_in">Symbol</span>()); <span class="comment">//[object Symbol]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="literal">undefined</span>) ; <span class="comment">// [object Undefined]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="literal">null</span>) ; <span class="comment">// [object Null]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Function</span>()) ; <span class="comment">// [object Function]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Date</span>()) ; <span class="comment">// [object Date]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call([]) ; <span class="comment">// [object Array]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">RegExp</span>()) ; <span class="comment">// [object RegExp]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Error</span>()) ; <span class="comment">// [object Error]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="built_in">document</span>) ; <span class="comment">// [object HTMLDocument]</span></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(<span class="built_in">window</span>) ; <span class="comment">//[object global] window 是全局对象 global 的引用</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a class="header-anchor" href="#总结"># </a>总结</h2><p><strong>typeof：</strong></p><ul><li>可判断<ul><li>数值</li><li>字符串</li><li>布尔值</li><li>undefined</li><li>function</li></ul></li><li>不可判断<ul><li>null</li><li>object</li><li>array</li></ul></li></ul><p><strong>instance：</strong></p><ul><li>判断对象具体类型</li></ul><p><strong>全等于：</strong></p><ul><li>null/undefined</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> EcmaScript </category>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> EcmaScript </tag>
            
            <tag> ES6 </tag>
            
            <tag> 类型判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo—Next自定义修改日志</title>
      <link href="/log/"/>
      <url>/log/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>本文用于记录本站每次更新的详情</p></blockquote><h2 id="2019-11-19-第一次修改"><a class="header-anchor" href="#2019-11-19-第一次修改"># </a>2019/11/19 第一次修改</h2><p>博客引用了hexo的next主题，主题github地址为<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a>,按照<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">官方文档</a>的介绍精心了初步配置</p><h3 id="把hexo项目同步到git中存储"><a class="header-anchor" href="#把hexo项目同步到git中存储"># </a>把hexo项目同步到git中存储</h3><p>为了将将项目文档同步到git中，保护自己在配置中的各类网站的key，按照官方的建议，把主题配置的_config.yml内容拷贝到了 /source/_data/next.yml中，上传到了自己的私有git仓库中</p><a id="more"></a><h3 id="目录结构的修改"><a class="header-anchor" href="#目录结构的修改"># </a>目录结构的修改</h3><p>方便以后查阅自己的笔记总结，新建了一个page笔记页面，并自定义了笔记目录，由与内容比较多就，接下来会逐步更新</p><h3 id="对next主题的自定义修改"><a class="header-anchor" href="#对next主题的自定义修改"># </a>对Next主题的自定义修改</h3><h4 id="在页尾添加自定义的图文footer-banner"><a class="header-anchor" href="#在页尾添加自定义的图文footer-banner"># </a>在页尾添加自定义的图文footer-banner</h4><p>在查阅官方的Muse主题的案例推荐后，看到<a href="https://leaferx.online/" target="_blank" rel="noopener">leaferx</a>文档下有一个自定义的图片banner比较有范，于是查阅了博主的样式设置，由于对swig语法还不太熟悉，就简单粗暴的修改了原始模版，具体方法如下</p><p>在next主题的 _layout/_layout.swfg 的footer标签，footer-inner class 上添加如下标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.custom-banner</span>&#123;</span></span><br><span class="line">    background-attachment: fixed;</span><br><span class="line">    background-position: center bottom;</span><br><span class="line">    padding: 40px 0;</span><br><span class="line">    margin-bottom: 40px;</span><br><span class="line">    background-size: 100%;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.3</span>);</span></span><br><span class="line">    background-image: url(/images/sea.jpg);</span><br><span class="line">    background-blend-mode: darken;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.custom-banner</span> <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line">    text-align: center;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    font-family: fira code,consolas,Menlo,pingfang sc,microsoft yahei,monospace;</span><br><span class="line">    font-style: italic;</span><br><span class="line">    font-weight: 400;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"custom-banner"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Stay hungary,Stay foolish.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="引入iconfont"><a class="header-anchor" href="#引入iconfont"># </a>引入iconfont</h4><p>由于Next主题使用的fontawsome免费的icon数量不是很多，而且版本比较老旧，因此使用iconfont的图标来丰富博客的图标库，网站链接在此<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a></p><p><strong>修改方法：</strong></p><p>为了方便日后直接使用，在next主题的 _layout/_layout.swfg 的头部文件中的&lt;head&gt;便签末尾插入以下<code>html</code>标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在iconfont生成项目后，每次添加不同的icon都会改变src地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//at.alicdn.com/t/font_1078070_hs0wiix70l.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.icon</span> &#123;</span></span><br><span class="line">    width: 1em; height: 1em;</span><br><span class="line"><span class="css">    <span class="selector-tag">vertical-align</span>: <span class="selector-tag">-0</span><span class="selector-class">.15em</span>;</span></span><br><span class="line">    fill: currentColor;</span><br><span class="line">    overflow: hidden;</span><br><span class="line"> &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>随后在需要使用的markdown文档中使用以下标签可以使用iconfont图标,href的内容为iconfont项目内的图标标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#icon-php"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h4 id="将站点地图放置到页脚"><a class="header-anchor" href="#将站点地图放置到页脚"># </a>将站点地图放置到页脚</h4><p>站点地图是为了方便搜索引擎爬去信息，在layout/_partials/footer.swig中，将以下html添加到span.author标签下方</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-map"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>站点地图:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/sitemap.xml"</span> <span class="attr">style</span>=<span class="string">"color:#999"</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span>/</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/baidusitemap.xml"</span> <span class="attr">style</span>=<span class="string">"color:#999"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日志 </category>
          
          <category> Blog设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日志 </tag>
            
            <tag> Nexo </tag>
            
            <tag> Next </tag>
            
            <tag> 主题 </tag>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="header-anchor" href="#quick-start"># </a>Quick Start</h2><a id="more"></a><h3 id="create-a-new-post"><a class="header-anchor" href="#create-a-new-post"># </a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="header-anchor" href="#run-server"># </a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="header-anchor" href="#generate-static-files"># </a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="header-anchor" href="#deploy-to-remote-sites"># </a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据分析第六步--撰写报告</title>
      <link href="/note/dataanalysis/6.%E6%92%B0%E5%86%99%E6%8A%A5%E5%91%8A/"/>
      <url>/note/dataanalysis/6.%E6%92%B0%E5%86%99%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
          <category> 基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析第五步--数据展现</title>
      <link href="/note/dataanalysis/5.%E6%95%B0%E6%8D%AE%E5%B1%95%E7%8E%B0/"/>
      <url>/note/dataanalysis/5.%E6%95%B0%E6%8D%AE%E5%B1%95%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
          <category> 基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析第四步--数据分析</title>
      <link href="/note/dataanalysis/4.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/note/dataanalysis/4.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="数据分析方法"><a class="header-anchor" href="#数据分析方法"># </a>数据分析方法</h2><p>  数据分析主要有三大作用：现状分析，原因分析，预测分析。根据这些数据分析的类别可以用不同的分析方法去分析</p><table><thead><tr><th style="text-align:center">数据分析作用</th><th style="text-align:center">基本方法</th><th style="text-align:center">数据分析方法</th></tr></thead><tbody><tr><td style="text-align:center">现状分析</td><td style="text-align:center">对比</td><td style="text-align:center">对比分析<br>平均分析<br>综合分析法<br>…</td></tr><tr><td style="text-align:center">原因分析</td><td style="text-align:center">细分</td><td style="text-align:center">分组分析法<br>结构分析<br>交叉分析<br>杜邦分析<br>漏斗图分析<br>矩阵关联分析<br>聚类分析<br>…</td></tr><tr><td style="text-align:center">预测分析</td><td style="text-align:center">预测</td><td style="text-align:center">回归分析<br>时间序列<br>决策树<br>神经网络</td></tr></tbody></table><h3 id="对比分析法"><a class="header-anchor" href="#对比分析法"># </a>对比分析法</h3><p>  <code>对比分析法</code>是指两个或两个以上的数据进行比较，分析差异，从而揭示这些数据所代表的事物发展变化及规律性。</p><a id="more"></a><p>  <code>对比分析法</code>的<code>特点</code>是：可以非常直观的看出事物变化或差距，并且可以准确、量化的表示出这种变化或差距是多少。一般会使用直方图来展示对比的数据。</p><p>对比分析法可以分为两类：</p><ul><li><code>静态比较</code> 是指在统一时间条件下对比不同总体指标的比较，如不同部门、不同地区、不同国家的比较，也叫横向比较，简称横比</li><li><code>动态比较</code>是指在同一条件下对不同时期指标数值的比较，也叫纵向比较，简称纵比</li></ul><h4 id="对比分析的几个维度"><a class="header-anchor" href="#对比分析的几个维度"># </a>对比分析的几个维度</h4><ol><li><p>与目标对比</p><p>  实际值与目标值对比，属于横比。例如每月业绩目标的对比，如果一年还未过完，可以按时间端拆分在进行对比，或直接用完成率进行对比</p></li><li><p>不同时间的对比</p><p>  不同时期的同一指标作为对比，属于纵比。将现在的情况与去年同期比较叫同比，与上个月对比叫环比。</p></li><li><p>同级部门、单位、地区的对比</p><p>  同级部门、单位、地区之间的对比属于横比，可以了解某自己某一方面或各方面的发展水平在集体中处于什么样的水平，取长补短</p></li><li><p>行业内对比</p><p>  与行业中的标杆企业和竞争对手和行业平均水平进行对比，属于横比。可以了解到自身某一方面或者各方面在行业内属于什么样的位置，明确落后和领先的指标。</p></li><li><p>活动效果对比</p><p>  将某一营销活动开展前后的对比，属于纵比，可以分析营销活动效果如何，了解广告投放，品牌知名度，企业销量等数据是否有大幅增长。</p><p>  还可以通过分组对比，比如对A组展开活动，对B组保持，通过两组业绩进行分析对比分析，可知活动对效果如何。</p></li></ol><h3 id="分组分析法"><a class="header-anchor" href="#分组分析法"># </a>分组分析法</h3><p>  <code>分组分析</code>是根据数据分析对象特征，按照一定的标志(指标)，把数据分析对象划分到不同的部分和类型来进行研究，以揭示期内部在联系和规律性。</p><p>  分组的目的是为了方便对比，把总体中具有不同性质的对象区别开来，把性质相同的组成一组。保持数组内对象属性的一致性，组与组之间的属性具有差异性。以便进一步用各种数据分析来结构内在的数量关系，因此分组法必须与对比法结合运用。</p><h4 id="分组的步骤"><a class="header-anchor" href="#分组的步骤"># </a>分组的步骤</h4><ul><li>第一步：确定数组。根据数据本身的特点(数据大小)来判断。数据分组的目的是观察数据分布的特征，因此确定的数组要适中。</li><li>第二步：确定各组的组距。组距=（最大值-最小值）/组数</li><li>第三步：根据数据大小，将数据分组整理</li></ul><h3 id="结构分析"><a class="header-anchor" href="#结构分析"># </a>结构分析</h3><p>  <code>结构分析法</code>是指被分析总体内的各部分与总体之间进行对比的分析法，及总体内各个部分占总体的比例，属于相对指标。一般某比分比例越大，说明起重要程度越高，对总体影响越大，一般用饼图来分析。</p><ul><li>结构相对指标(比例)的计算公式为：结构相对指标(比例)=(总体某部分的数值/总体总量)*100%</li></ul><h3 id="平均分析法"><a class="header-anchor" href="#平均分析法"># </a>平均分析法</h3><p>  <code>平均分析法</code>就是运用计算平均数的方法来反映总体在一定时间、地点条件下某一数量特征的一般水平。平均指标可以用于同一现象在不同地区、不同部门或单位时间的对比，还可用于同一现象在不同时间的对比。主要作用有以下两点：</p><ul><li>利用平均指标对比同类现象在不同地区、不同行业、不同类型单位等之间的差异程度，比用总量指标对比更具说服力。</li><li>利用平均指标对比某些现象在不同历史时期的变化更能说明其发展的趋势和规律。</li></ul><p>  平均指标有<code>算数平均数</code>、<code>调和平均数</code>、<code>几何平均数</code>、<code>重数</code>、和<code>中位数</code>等。</p><h3 id="交叉分析法"><a class="header-anchor" href="#交叉分析法"># </a>交叉分析法</h3><p>  交叉分析法常用于两个变量(字段之间的关系)，及同时将两个有一定联系的变量及其值交叉排列在一张表格内，使各变量的值成为不同变量的交叉点，形成交叉表，从而分析交叉表中变量之间的关系，也叫做交叉分析表法。</p><p><img src="/assets/dataanalysis/0/%E4%BA%A4%E5%8F%89%E8%A1%A8.jpg" alt="交叉表"></p><h3 id="综合评价分析法"><a class="header-anchor" href="#综合评价分析法"># </a>综合评价分析法</h3><p>  <code>综合分析法</code>是指运用多个指标对多个参评单位进行评价的方法，成为多变量综合评价分析方法，简称综合评价分析法。基本思想是将多个指标转化为一个能反映综合情况多指标来进行分析评价。综合评价分析一般按以下5个步骤进行：</p><ol><li>确定综合评价指标体系，即包含哪些指标，是综合评价的基础和依据</li><li>收集数据，并对不同计量单位的指标数据进行标准化处理</li><li>确定指标体系中指标的权重，以保证评价的科学性</li><li>对处理后的指标再进行汇总计算出综合评价指数或综合评价分值</li><li>根据评价指数或分值对参评单位进行排序，并由此得出结论</li></ol><p>评价分析法的三大特点：</p><ol><li>评价过程不是逐个指标顺次完成的，而是通过一些特殊方法将多个指标的评价同时完成的</li><li>在综合评价过程中，一般要根据指标的重要性进行加权处理</li><li>评价结果不再是有具体含义的统计指标，而以指数或分值表示参评单位的综合情况排序</li></ol><h4 id="权重确定方法"><a class="header-anchor" href="#权重确定方法"># </a>权重确定方法</h4><ul><li><p>专家访谈法</p></li><li><p>德尔菲法</p></li><li><p>层次分析法</p></li><li><p>主要成分分析法</p></li><li><p>因子分析法</p></li><li><p>回归分析法</p></li><li><p>目标矩阵法</p></li></ul><h3 id="杜邦分析法"><a class="header-anchor" href="#杜邦分析法"># </a>杜邦分析法</h3><p> 杜邦分析法由美国杜邦公司创造，又称杜邦财务分析体系，简称杜邦体系。主要是通过几个主要财务指标之间的关系，综合分析企业的财务状况和获利能力。体系以净资产收益率为龙头，以资产收益率和权益乘数为核心，重点解释企业盈利能力及权益乘数对净资产收益率的影响，以及各相关指标之间的的相互影响关系，为各级管理者优化经营理财状况，提高公司经营效益提供了思路。提高总资产收益率的根本在于扩大销售、节约成本、优化投资配加速资金周优化资金结构、确定风险意识等。</p><blockquote><p>杜邦分析示例</p></blockquote><img src="/assets/dataanalysis/0/杜邦分析体系示例.jpg" alt="杜邦分析示例" style="zoom:130%;"><p>  杜邦分析特点在于，将若干个用以评价企业经营效率和财务状况的比率按其内在联系有机结合起来，形成一个完整的指标体系，并通过最终权益收益率来综合反映。</p><h4 id="杜邦分析法的分析步骤"><a class="header-anchor" href="#杜邦分析法的分析步骤"># </a>杜邦分析法的分析步骤</h4><p>1、以净资产收益率为起点，根据会计资料(主要是资产负债表和利润表)逐步分解计算杜邦分析图中各个指标。</p><p>2、将计算出的指标数据填入杜邦分析图;</p><p>3、进行对比分析，可以与企业前期对比，分析自身进步与否；也可以进行企业间对比，了解差距和优势。</p><h4 id="杜邦分析法的主要指标"><a class="header-anchor" href="#杜邦分析法的主要指标"># </a>杜邦分析法的主要指标</h4><p><img src="https://pic1.zhimg.com/80/v2-1f53b7e67c65abedacfaedcb3ede2964_hd.jpg" alt="img"></p><p>1、 净资产收益率</p><p>净资产收益率 = 总资产收益率 * 权益乘数，该指标值越高，说明企业的获利能力越强。投资带来的收益越高。</p><p>例如：某企业的总资产收益率为10%，权益乘数为2.22，那么企业净资产收益率为2.22 * 10% = 22.2%。</p><p>2、总资产收益率</p><p>总资产收益率 = 营业净利率 * 总资产周转率，是一个衡量企业收益能力的指标。该指标反映的是公司运用全部资产所获得利润的水平。该指标越高，表明公司投入产出水平越高， 资产运营越有效。</p><p>例如：某企业的年营业净利率为44.4%，总资产周转率为22.5%，那么企业总资产收益率为44.4% * 22.5% = 10%。</p><p>3、营业净利率</p><p>营业净利率 = 净利润 / 营业收入，它反映企业获利能力的指标，营业净利率越高，说明企业获利能力越强。</p><p>例如：某企业的年营业净利润为200万，年营业收入为450万，那么企业的营业净利率为200 / 450 * 100% = 44.4%。</p><p>4、总资产周转率</p><p>总资产周转率 = 营业收入 / 总资产，是考察企业资产运营效率的一项重要指标，该指标体现了企业经营期间全部资产从投入到产出的流转速度，反映了企业全部资产的管理质量和利用效率。</p><p>例如：某企业年营业收入为450万，企业总资产为2000万，那么总资产周转率为450 / 2000 * 100% = 22.5%。</p><p>5、净利润</p><p>净利润 = 营业收入 - 全部成本 - 所得税后，也称为税后利润。</p><p>6、权益乘数</p><p>权益乘数 = 总资产 / 净资产</p><p>= 总资产 / （总资产 - 总负债）</p><p>权益乘数是指企业总资产相当于净资产的多少倍。它与企业的净资产成反比，与总负债成正比，如果企业的总负债升高，权益乘数相应升高，但企业的财务风险也随之越高。</p><p>例如：某企业的的总资产为2000万，总负债为1100万，那么权益乘数2000 / (2000 - 1100) = 2.22。</p><p>7、总资产、净资产、总负债</p><p>三者的关系为总资产 = 净资产 + 总负债。</p><p>总资产是一个企业所拥有的、能够控制的全部资产。</p><p>净资产是企业总资产减去总负债后的净额。</p><p>总负债是企业所承担的、并需要偿还的全部债务。</p><p>例如：一个人有20万，借款30万买了一套房，那么这个人的总资产为50万，净资产20万，总负债为30万。</p><h4 id="杜邦分析法的指标关系说明"><a class="header-anchor" href="#杜邦分析法的指标关系说明"># </a>杜邦分析法的指标关系说明</h4><p>1、杜邦分析法的主要公式</p><p>影响净资产收益率的三个主要指标是营业净利率、总资产周转率、权益乘数。</p><p>综合公式为：</p><p>净资产收益率 = 总资产收益率 * 权益乘数</p><p>= 营业净利率 * 总资产周转率 * 权益乘数</p><p>=（净利润 / 营业收入）*（营业收入 / 总资产）* [总资产 / （总资产 - 总负债）]</p><p>2、分步公式</p><p>总资产收益率 = 营业净利率 * 总资产周转率</p><p>营业净利率 = 净利润 / 营业收入</p><p>总资产周转率 = 营业收入 / 总资产</p><p>权益乘数 = 总资产 / （总资产 - 总负债）</p><p>净利润 = 营业收入 - 全部成本 - 所得税</p><h4 id="杜邦分析法的分析思路"><a class="header-anchor" href="#杜邦分析法的分析思路"># </a>杜邦分析法的分析思路</h4><p>杜邦分析采用金字塔结构，把企业净资产收益率逐级分解为多项财务指标的比值或乘积，这样有助于我们深入分析企业的经营状况，如果净资产收益率表现不如预期，杜邦分析法可能找出具体是哪部分表现欠佳。</p><p>1、营业净利率</p><p>营业净利率体现的是企业经营的最终获利能力指标，其值越高，说明企业的获利能力越强。</p><p><img src="https://pic1.zhimg.com/80/v2-474fc5aab06020d930a4029ffcdb6598_hd.jpg" alt="img"></p><p>营业净利率 = 净利润 / 营业收入</p><p>从上图与公式可以看出，营业净利率与净利润成正比，当营业收入保持在一定水平时，应尽量提高企业净利润水平；通过分析，净利润 = 营业收入 - 全部成本 - 所得税，这里企业所得税率是法定的，所以要提高净利润，主要有两个途径，其一是提高营业收入，其二是降低成本费用。</p><p>2、总资产周转率</p><p>总资产周转率是考察企业资产运营效率的一项重要指标，一般情况下，该数值越高，表明企业总资产周转速度越快，经营能力越强，资产利用效率越高。</p><p><img src="https://pic4.zhimg.com/80/v2-5027822220811a447dcf39a002ec7c6f_hd.jpg" alt="img"></p><p>总资产周转率 = 营业收入 / 总资产</p><p>从上图与公式可以看出，总资产周转率与营业收入成正比，企业总资产保持在一定水平时，营业收入越高，总资产周转率就越高。</p><p>3、权益乘数</p><p>权益乘数是一个反映企业债务程度的指标，它既关系到企业财务风险，同时也影响到净资收益率的高低。</p><p><img src="https://pic1.zhimg.com/80/v2-5ca0f7eac9dfdd05df677776ab614b48_hd.jpg" alt="img"></p><p>权益乘数 = 总资产 / （总资产 - 总负债）</p><p>通过上图和公式可知，权益乘数与总负债成正比。这里有两种情况：</p><p>其一是企业总负债升高，权益乘数升高，净资产收益率升高，但同时企业的财务风险也升高。</p><p>其二是企业总负债降低，权益乘数降低，净资产收益率降低，但同时企业的财务风险也降低。</p><p>所以权益乘数既有助于调控企业财务风险，又可以调控净资产收益率水平。管理者需要根据经营情况调控最优资本结构，在营运状况处于向好趋势时，可以调高权益乘数，提高企业的获利能力，实现收益最大化。在企业经营状况下滑时，降低权益乘数，控制风险。</p><p>综上我们就可以勾勒出杜邦分析法的完整轮廓：</p><p><img src="https://pic1.zhimg.com/80/v2-655b4ae936170a7692237ea90e4cb4c8_hd.jpg" alt="img"></p><p>提高净资产收益率的根本在于扩大营业收入、节约成本、加快资产周转、优化资本结构等等。</p><p>总之，杜邦分析法可使财务分析的层次更清晰、重点更突出。通过对几个主要财务指标的对比分析，为管理者了解企业的经营状况和提高经营效益提供依据。</p><h3 id="漏斗分析法"><a class="header-anchor" href="#漏斗分析法"># </a>漏斗分析法</h3><p>  漏斗图是一个适合业务流程比较规范、周期比较长、各流程环节涉及复杂，业务过程比较多的管理分析工具。</p><p><img src="/assets/dataanalysis/0/%E6%BC%8F%E6%96%97%E5%9B%BE.jpg" alt="漏斗图"></p><p>  单一的漏斗图无法评价网站某个关键流程中各个步骤的转化好坏。我们可以利用之前介绍的对比分析法，对同一环节优化前后的效果进行对比分析，或对同一环节不同细分用户群的转化率做比较，或对比同行业类似产品的转化率进行对比，等等。</p><p>  漏斗图不光能展现用户在业务中的转化率和流失率，还可以告诉我们各种业务在网站中的受欢迎程度和重要程度。通过对不同业务的漏斗图进行对比，可以找出何种业务在网站中更受欢迎或更吸引用户。</p><h3 id="矩阵关联分析法"><a class="header-anchor" href="#矩阵关联分析法"># </a>矩阵关联分析法</h3><p>  <code>矩阵分析法</code>是根据事物(如产品，服务等)的两个重要属性(指标)作为分析的依据，进行分类关联分析，找出解决问题的一种分析方法。</p><p>  当判断某个事物等多重属性时，且各个属性之间没有直接关联性，需要根据多重属性判断事物等结果。常用的矩阵有：</p><ul><li><p>SWOT矩阵</p><ul><li>优势</li><li>劣势</li><li>机会</li><li>威胁</li></ul></li><li><p>波士顿矩阵</p><ul><li>市场份额</li><li>市场增长率</li></ul></li><li><p>满意度矩阵</p><ul><li>重要性</li><li>满意度</li></ul></li></ul><blockquote><p>案例</p></blockquote><p><img src="/assets/dataanalysis/0/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E6%B3%95%E6%A1%88%E4%BE%8B.jpg" alt="矩阵分析法样图"></p><h4 id="矩阵的进阶"><a class="header-anchor" href="#矩阵的进阶"># </a>矩阵的进阶</h4><ul><li>发展矩阵：在矩阵的数据中，可以添加时间性的字段，从而使矩阵有中的点有线性的变化</li><li>气泡图矩阵：在上述案例中，可以添加一列激活率，用起泡的大小来表示，这样就可以更加多维的展现数据</li></ul><h3 id="高级数据分析法"><a class="header-anchor" href="#高级数据分析法"># </a>高级数据分析法</h3><p>高级数据方法更加复杂多变，这里无法简单介绍，需要更多统计学方面的知识，和更高级的工具，这里只做了列举</p><table><thead><tr><th style="text-align:center">研究方向</th><th>数据分析方法</th></tr></thead><tbody><tr><td style="text-align:center">产品研究</td><td>相关分析、对应分析、判别分析、结合分析、多维尺度分析、等</td></tr><tr><td style="text-align:center">品牌研究</td><td>相关分析、聚类分析、判别分析、因子分析、对应分析、多维尺度分析、等</td></tr><tr><td style="text-align:center">价格研究</td><td>相关分析、PSM价格分析、等</td></tr><tr><td style="text-align:center">市场细分</td><td>聚类分析、判别分析、因子分析、对应分析、多维尺度分析、Logistic回归、决策树等</td></tr><tr><td style="text-align:center">满意度研究</td><td>相关分析、回归分析、主成分分析、因子分析、结构方程、等</td></tr><tr><td style="text-align:center">用户研究</td><td>相关分析、聚类分析、判别分析、因子分析、对应分析、Logistic回归，决策树，关联规则等</td></tr><tr><td style="text-align:center">预测研究</td><td>回归分析、决策树、神经网络、时间序列、Logistic回归等</td></tr></tbody></table><h2 id="数据分析工具"><a class="header-anchor" href="#数据分析工具"># </a>数据分析工具</h2><h3 id="数据透视表"><a class="header-anchor" href="#数据透视表"># </a>数据透视表</h3>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
          <category> 基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析第三步--数据处理</title>
      <link href="/note/dataanalysis/3.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
      <url>/note/dataanalysis/3.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="数据清洗"><a class="header-anchor" href="#数据清洗"># </a>数据清洗</h2><h3 id="重复数据的处理"><a class="header-anchor" href="#重复数据的处理"># </a>重复数据的处理</h3><h4 id="函数法"><a class="header-anchor" href="#函数法"># </a>函数法</h4><p>  countif(统计区域，统计内容)函数:如果想统计countif统计是重复的第几个项目，可以使用countif(初始单元格到当前统计单元格区域,统计内容)统计是第几次重复，例如countif($A$1A2:A2)。</p><h4 id="高级筛选法"><a class="header-anchor" href="#高级筛选法"># </a>高级筛选法</h4><p>  数据选项卡-&gt;排序和筛选-&gt;高级筛选-&gt;选择不重复的数据</p><h4 id="条件格式法"><a class="header-anchor" href="#条件格式法"># </a>条件格式法</h4><p>  开始-&gt;条件格式-&gt;突出单元格规则-&gt;重复值</p><a id="more"></a><h4 id="数据透视表"><a class="header-anchor" href="#数据透视表"># </a>数据透视表</h4><p>  插入-&gt;<a href="https://support.office.com/zh-cn/article/%e5%88%9b%e5%bb%ba%e6%95%b0%e6%8d%ae%e9%80%8f%e8%a7%86%e8%a1%a8%e4%bb%a5%e5%88%86%e6%9e%90%e5%b7%a5%e4%bd%9c%e8%a1%a8%e6%95%b0%e6%8d%ae-a9a84538-bfe9-40a9-a8e9-f99134456576?ui=zh-CN&amp;rs=zh-CN&amp;ad=CN" target="_blank" rel="noopener">插入数据透视表</a></p><h4 id="直接删除重复数据"><a class="header-anchor" href="#直接删除重复数据"># </a>直接删除重复数据</h4><ul><li>方法一:<ul><li>数据-&gt;数据工具-&gt;删除重复项</li></ul></li><li>方法二：<ul><li>通过countif函数，计算出是第几次重复，然后排序删除重复项</li></ul></li><li>方法三：<ul><li>通过countif函数，计算出是第几次重复，然后筛选出为1的数据</li></ul></li></ul><h3 id="缺失数据的处理"><a class="header-anchor" href="#缺失数据的处理"># </a>缺失数据的处理</h3><h4 id="定位输入"><a class="header-anchor" href="#定位输入"># </a>定位输入</h4><p>  缺失数据处理的最常用的方法是采用定位功能，可用ctrl+g快捷键，或开始-&gt;编辑-&gt;查找和选择-&gt;定位条件。我们一般使用四种方法处理缺失值：</p><ol><li>使用样本统计量的值替代缺失值，一般是采用样本的平均值</li><li>用一个统计模型计算出来值去替代缺失值。常用的模型有回归模型、判别模型等，需用专业的数据分析软件</li><li>将缺失值的记录删除，不过会导致样本量减少</li><li>讲缺失值记录保存，但在统计分析时排除，当样本统计量比较大，但是缺失值不多时可以使用</li></ol><ul><li>Ctrl +Enter按键可以在选中的不规则单元格中批量填入同一数据</li></ul><h4 id="查找替换"><a class="header-anchor" href="#查找替换"># </a>查找替换</h4><ul><li>查找的快捷键：Ctrl+F</li><li>替换的快捷键：Ctrl+H</li></ul><h3 id="检查数据逻辑错误"><a class="header-anchor" href="#检查数据逻辑错误"># </a>检查数据逻辑错误</h3><ul><li>IF函数：=If(logic, true,false)</li><li>OR函数：or(条件1,条件2)满足其中一个条件为true</li><li>AND函数：AND（条件一，条件二吗。。。）全部满足为true</li><li>利用条件格式标记错误：开始-&gt;条件格式-&gt;突出显示单元格规则-&gt;其他规则-&gt;使用公式确定 要设置格式单元格</li></ul><h2 id="数据加工"><a class="header-anchor" href="#数据加工"># </a>数据加工</h2><h3 id="数据抽取"><a class="header-anchor" href="#数据抽取"># </a>数据抽取</h3><h4 id="字段分列"><a class="header-anchor" href="#字段分列"># </a>字段分列</h4><ul><li>在数据-&gt;数据工具-&gt;分列-&gt;文本分列导向</li><li>left函数和right函数截取，可配分find函数确定指定的字符</li></ul><h4 id="字段合并"><a class="header-anchor" href="#字段合并"># </a>字段合并</h4><ul><li>使用“&amp;”符号可链接字符</li><li>text函数可以把数值转换陈文本，例如“10%”直接使用&amp;符号连接会变为0.1</li><li>clean可以清除非打印的字符串</li><li>concatenate函数，与&amp;符号同样的效果</li></ul><h4 id="字段匹配"><a class="header-anchor" href="#字段匹配"># </a>字段匹配</h4><ul><li><a href="https://support.office.com/zh-cn/article/VLOOKUP-%E5%87%BD%E6%95%B0-0BBC8083-26FE-4963-8AB8-93A18AD188A1" target="_blank" rel="noopener">vlookup函数</a></li></ul><h3 id="数据计算"><a class="header-anchor" href="#数据计算"># </a>数据计算</h3><h4 id="简单的计算"><a class="header-anchor" href="#简单的计算"># </a>简单的计算</h4><p>  简单的加减乘除可以使用“=单元格 +｜-｜*｜/ 单元格来实现</p><h4 id="函数计算"><a class="header-anchor" href="#函数计算"># </a>函数计算</h4><ul><li>平均值Average</li><li>求和Sum</li><li>日期加减函数<ul><li>当前年月日：today函数(快捷键Ctrl+;)</li><li>当前时分：Ctrl+Shift+;</li><li>当前完整日期：now函数(快捷键Ctrl+; 然后按空格，在按Ctrl+Shift+;)</li><li>date函数加减时间：给2011/1/1的单元格加上3年2月和1天，可用函数表达为=date(year(日期单元格)+3，month(日期单元格)+2，day(日期单元格)+1)</li><li><a href="https://support.office.com/zh-cn/article/DATEDIF-%E5%87%BD%E6%95%B0-25dba1a4-2812-480b-84dd-8b32a451b35c" target="_blank" rel="noopener">dateif函数</a></li></ul></li></ul><h3 id="数据分组"><a class="header-anchor" href="#数据分组"># </a>数据分组</h3><ul><li>vlookup函数的模糊匹配，寻找接近但不大于阈值的值</li></ul><p><img src="/assets/dataanalysis/0/vlookup%E5%87%BD%E6%95%B0.jpg" alt="vlook函数"></p><h3 id="数据转换"><a class="header-anchor" href="#数据转换"># </a>数据转换</h3><h4 id="行列转置"><a class="header-anchor" href="#行列转置"># </a>行列转置</h4><ul><li>方法一：选中数据，复制，然后右键选择粘贴，转置</li><li>方法二：“ctrl+alt+v”会弹出选择粘贴框</li></ul><h2 id="数据抽样"><a class="header-anchor" href="#数据抽样"># </a>数据抽样</h2><p>  随机抽样需要随机数，这时可以用rand函数获取一个0～1的随机数，可以是用int(rand()*区间长度+起始区间)来获取一个区间的整数。</p>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
          <category> 基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析第二步--数据收集</title>
      <link href="/note/dataanalysis/2.%E6%95%B0%E6%8D%AE%E6%94%B6%E9%9B%86/"/>
      <url>/note/dataanalysis/2.%E6%95%B0%E6%8D%AE%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="数据的构造"><a class="header-anchor" href="#数据的构造"># </a>数据的构造</h2><h3 id="字段与记录"><a class="header-anchor" href="#字段与记录"># </a>字段与记录</h3><p>  <code>字段</code>是事务或现象的某种特征。比如成绩表中的“学号”，“姓名”，“总分”等都是字段，在统计学中成为变量</p><p>  <code>记录</code>是事务或现象等具体表现，比如沉寂表中的“性别”可以是男或女，“总分”可以是“237”或“230”等，记录也成为数据或量值。</p><h3 id="数据类型"><a class="header-anchor" href="#数据类型"># </a>数据类型</h3><p>  数据类型一般分为字符型和数值型数据</p><p>  <code>字符型</code>数据是不具备计算能力等文字型数据，包括中文英文、数字字符（例如订单编号这类非数值型数据）等字符。例如成绩表中的“姓名”，“性别”，“总评”三个变量均为字符型数据。</p><a id="more"></a><p>  <code>数值型数据</code>是直接使用自然数或者度量单位进行计量的数据值，例如成绩表中“语文”，“数学”成绩计算得出总分这个字段，数值型数据可以用算数方法进行汇总和分析，这一点是区分数据是否属于数值型数据的重要依据。</p><h4 id="统计方法差异"><a class="header-anchor" href="#统计方法差异"># </a>统计方法差异</h4><ul><li>连续型变量：能做频数分析、集中趋势分析（均值、众数，中位数）、离散程度分析（标准差、方差、最大值、最小值、范围）</li><li>非连续型变量：主要能做频数分析</li></ul><h3 id="数据表"><a class="header-anchor" href="#数据表"># </a>数据表</h3><p>  数据表是由字段、记录和数据类型构成的数据表。数据表的要求一般要为后续数据分析做长远的考虑与规划。</p><p>基本要求如下：</p><ol><li>数据表要由标题行和数据部分组成</li><li>第一行是表的列标题（字段名），列标题不能重复</li><li>第二行起是数据部分，数据部分一行成为一个记录，数据部分不允许出现空白行和和空白列</li><li>数据表中不能有合并的单元格存在</li><li>数据表与其他数据之间至少留出一个空白行或者空白列</li><li>数据表要以一位的形式存储，实际过程中常常以二维的形式存在，此时要将二维表转换成一位表</li></ol><h2 id="数据来源"><a class="header-anchor" href="#数据来源"># </a>数据来源</h2><h3 id="文本或数据表导入"><a class="header-anchor" href="#文本或数据表导入"># </a>文本或数据表导入</h3><p>   以EXCEL为例，可在数据选项卡中选中导入csv或txt文本文件、或excel表格内的数据，甚至可以使用导入网站简单的数据表</p><h3 id="数据埋点"><a class="header-anchor" href="#数据埋点"># </a>数据埋点</h3><p>  如uv/pv、用户数、用户停留时间、浏览页面等用户行为数据</p><h3 id="第三方数据平台"><a class="header-anchor" href="#第三方数据平台"># </a>第三方数据平台</h3><p>  如Growing IO、SimilarWeb，Google Analytics，国家统计局网站</p><h3 id="问卷调查"><a class="header-anchor" href="#问卷调查"># </a>问卷调查</h3><ul><li>线上问卷调查，制作问卷工具：如问卷星</li><li>线下问卷调查</li><li>电话回访</li></ul><h4 id="问卷调查的题目类型"><a class="header-anchor" href="#问卷调查的题目类型"># </a>问卷调查的题目类型</h4><ul><li>数值题，一般要求填入具体的数值，例如时间，或者评分等等</li><li>单选题，一般单选题的答案只能有一个，因此只需留下一个字段记录即可</li><li>多选题</li><li>排序题</li><li>开放性问题</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
          <category> 基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析第一步--明确分析目的和思路</title>
      <link href="/note/dataanalysis/1.%E6%98%8E%E7%A1%AE%E5%88%86%E6%9E%90%E7%9B%AE%E7%9A%84%E5%92%8C%E6%80%9D%E8%B7%AF/"/>
      <url>/note/dataanalysis/1.%E6%98%8E%E7%A1%AE%E5%88%86%E6%9E%90%E7%9B%AE%E7%9A%84%E5%92%8C%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>  在进行数据之前，首先应该明确分析的目标和思路。只有明确的目标和思路才能为后续的数据收集，数据处理及数据分析题提供清晰的指引方向。针对各式各样的数据分析的需求，往往会有以下问题：</p><ul><li>不知到从何入手</li><li>分析的指标常常被人质疑不合理，不完整</li><li>自己也不明白分析出的结果有什么意义</li></ul><p>  分析方法论的作用就是知道数据分析人员对数据进行一次完整的数据分析。只有在营销、管理等方法和理论的知道下，结合实际业务才能确保数据分析的纬度的完整性，就像建筑设计为建筑工人提供建设思路一样，只有明确的设计图纸，建筑工人才能根据图纸，使用各种各样的工具和材料，建设出满足施工需求的房屋建筑来。</p><a id="more"></a><hr><p>总结一下数据分析方法论的作用</p><ul><li>理顺分析思路，确保数据分析结构体系化。</li><li>把问题分解成关联的部分，并显示其对应关系</li><li>为后续数据分析开展指引方向。</li><li>确保分析结果的有效性和正确性</li></ul><h2 id="常见的分析方法论"><a class="header-anchor" href="#常见的分析方法论"># </a>常见的分析方法论</h2><p>营销方面的理论模型有：</p><ul><li>4P理论模型</li><li>用户使用行为模型</li><li>STP理论模型</li><li>SWOT分析法、等</li></ul><p>管理方面的理论模型有：</p><ul><li>PEST模型</li><li>5W2H模型</li><li>时间管理模型</li><li>生命周期模型</li><li>逻辑树模型</li><li>金字塔模型</li><li>SMART原则、等</li></ul><p>  这些分析方法论常常运用在我们的工作生活中，为我们思考问题，解决问题，提供了一种思维路径，能让我们全面的，有逻辑的去分析问题，解决问题</p><h3 id="4p理论模型🌟"><a class="header-anchor" href="#4p理论模型🌟"># </a>4P理论模型🌟</h3><p>  4P营销理论产生于20世纪60年代的美国，随着<a href="https://wiki.mbalib.com/wiki/%E8%90%A5%E9%94%80%E7%BB%84%E5%90%88%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">营销组合理论</a>的提出而出现的。营销组合实际上有几十个要素，这些要素可以概括为4类：产品(product)，价格(Price)，渠道(Place)，促销(Promiton)。</p><h4 id="产品-product"><a class="header-anchor" href="#产品-product"># </a>产品(Product)</h4><p>  从市场营销的角度来看，产品是指能够提供给市场，被人们使用和消费并满足人们某种需求的任何东西，包括有型产品，服务，人员，组织，观念或他们的组合。</p><h4 id="价格-price"><a class="header-anchor" href="#价格-price"># </a>价格(Price)</h4><p>  价格(Price)： 是指顾客购买产品时的价格，包括基本价格、折扣价格、支付期限等。价格或价格等决策关系到企业利润、成本补偿，以及是否有利于产品销促销等问题。影响定价等主要因素有三个：需求、成本与竞争。最高价格取决于市场需求，最低价格取决于该产品等成本费用，在最高价格和最低价格等幅度内，企业能把这种产品价格定多高则取决于竞争者的同种产品的价格。</p><h4 id="渠道-place"><a class="header-anchor" href="#渠道-place"># </a>渠道(Place)</h4><p>  指产品从生产企业流转到用户手上的全过程中所经历的各个环节。</p><h4 id="促销-promotion"><a class="header-anchor" href="#促销-promotion"># </a>促销(Promotion)</h4><p>  是指企业通过销售行为的改变来刺激用户消费，以短期的行为(比如让利，买一送一，营销现场气氛等等)促成消费的增长，吸引其他品牌的用户或者导致提前消费来促销销售的增长。广告、宣传推广、人员促销、销售促进时一个机构促销的四大要素。</p><h3 id="用户使用行为模型🌟"><a class="header-anchor" href="#用户使用行为模型🌟"># </a>用户使用行为模型🌟</h3><p>  用户行为是指用户为获取、使用物品或服务所采用的各种行动，用户对产品首先需要有一个认知，熟悉的过程，然后试用，在决定是否需要有一个认知熟悉感过程，然后试用，在决定是否继续消费使用，最后成为忠诚用户。以网站的用户使用行为的完整过程</p><pre class="mermaid" style="text-align: center;">            graph LR            认知-->熟悉-->试用-->使用-->忠诚          </pre><p>认知</p><ul><li>网站访问：PV，UV，访问来源</li></ul><p>熟悉</p><ul><li>网站浏览：平均停留时常、跳出率、页面偏好</li><li>站内搜索：搜索访问次数占比</li></ul><p>试用</p><ul><li>用户注册：注册用户数，注册转化率</li></ul><p>使用</p><ul><li>用户登陆：登陆用户数，访问登录比</li><li>用户订购：订单数、转化率</li></ul><p>忠诚</p><ul><li>用户黏性：回访者比率，访问深度</li><li>用户流失：用户流失数，流失率</li></ul><p>  用户行为模型常常配合漏斗图使用，后续章节</p><h3 id="stp理论-市场-目标-定位"><a class="header-anchor" href="#stp理论-市场-目标-定位"># </a><a href="https://wiki.mbalib.com/wiki/STP%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">STP理论(市场|目标|定位)</a></h3><p>  STP理论中的S、T、P分别是Segmenting、Targeting、Positioning三个英文单词的缩写，即<a href="https://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA%E7%BB%86%E5%88%86" target="_blank" rel="noopener">市场细分</a>、<a href="https://wiki.mbalib.com/wiki/%E7%9B%AE%E6%A0%87%E5%B8%82%E5%9C%BA" target="_blank" rel="noopener">目标市场</a>和<a href="https://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA%E5%AE%9A%E4%BD%8D" target="_blank" rel="noopener">市场定位</a>的意思。STP理论的根本要义在于选择确定目标消费者或客户,或称<a href="https://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA%E5%AE%9A%E4%BD%8D%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">市场定位理论</a>。根据STP理论，<a href="https://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA" target="_blank" rel="noopener">市场</a>是一个<code>综合体</code>，是<code>多层次</code>、<code>多元化</code>的<a href="https://wiki.mbalib.com/wiki/%E6%B6%88%E8%B4%B9%E9%9C%80%E6%B1%82" target="_blank" rel="noopener">消费需求</a>集合体，任何企业都无法满足所有的需求，企业应该根据不同需求、<a href="https://wiki.mbalib.com/wiki/%E8%B4%AD%E4%B9%B0%E5%8A%9B" target="_blank" rel="noopener">购买力</a>等因素把市场分为由相似需求构成的消费群，即若干子市场。这就是<a href="https://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA%E7%BB%86%E5%88%86" target="_blank" rel="noopener">市场细分</a>。</p><p>  企业可以根据自身战略和产品情况从子市场中选取有一定规模和发展前景，并且符合公司的目标和能力的<a href="https://wiki.mbalib.com/wiki/%E7%BB%86%E5%88%86%E5%B8%82%E5%9C%BA" target="_blank" rel="noopener">细分市场</a>作为公司的<a href="https://wiki.mbalib.com/wiki/%E7%9B%AE%E6%A0%87%E5%B8%82%E5%9C%BA" target="_blank" rel="noopener">目标市场</a>。随后，企业需要将<a href="https://wiki.mbalib.com/wiki/%E4%BA%A7%E5%93%81%E5%AE%9A%E4%BD%8D" target="_blank" rel="noopener">产品定位</a>在目标消费者所偏好的位置上，并通过一系列营销活动向目标消费者传达这一定位信息，让他们注意到<a href="https://wiki.mbalib.com/wiki/%E5%93%81%E7%89%8C" target="_blank" rel="noopener">品牌</a>，并感知到这就是他们所需要的。</p><p>  STP理论主要是用于公司，项目，产品定位分析的时候的使用的，牵涉到方面过多，可以和PEST分析发，swot分析法等共用，这里暂时先不展开了，数据分析只占了其中的一部分。</p><h3 id="swot分析法"><a class="header-anchor" href="#swot分析法"># </a><a href="https://wiki.mbalib.com/wiki/Swot" target="_blank" rel="noopener">SWOT分析法</a></h3><p>  <strong>SWOT分析法</strong>（也称<strong>TOWS分析法</strong>、<strong>道斯矩阵</strong>）即<strong>态势分析法</strong>。在现在的<a href="https://wiki.mbalib.com/wiki/%E6%88%98%E7%95%A5%E8%A7%84%E5%88%92" target="_blank" rel="noopener">战略规划</a>报告里，SWOT分析应该算是一个众所周知的工具。来自麦肯锡咨询公司的SWOT分析，包括分析企业的<code>优势（Strengths）</code>、<code>劣势（Weaknesses）</code>、<code>机会（Opportunities）</code>和<code>威胁（Threats）</code>。</p><p>  通过SWOT分析，可以帮助企业把资源和行动聚集在自己的强项和有最多机会的地方；并让企业的战略变得明朗。SWOT分析更多的用于企业战略指导，这里就不展开了。</p><h3 id="pest分析模型🌟"><a class="header-anchor" href="#pest分析模型🌟"># </a><a href="https://wiki.mbalib.com/wiki/PEST%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener">PEST分析模型</a>🌟</h3><p>  <strong>PEST分析</strong>是战略咨询顾问用来帮助企业检阅其外部宏观环境的一种方法，一般用于对宏观环境对分析<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。对宏观宏观环境应诉做分析时，由于不同行业和企业有其自身特点和经营需要，分析的具体内容会有差异，但一般都对应以下四个方面</p><ul><li>Political(政治因素)</li><li>Economic(经济因素)</li><li>Social(社会因素)</li><li>Techonlogical(技术因素)</li></ul><h4 id="政治法律环境-political-factors"><a class="header-anchor" href="#政治法律环境-political-factors"># </a><a href="https://wiki.mbalib.com/wiki/%E6%94%BF%E6%B2%BB%E6%B3%95%E5%BE%8B%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">政治法律环境</a>(Political Factors)</h4><p>  政治环境包括一个国家的<code>社会制度</code>，<code>执政党的性质</code>，<code>政府的方针</code>，<code>政策</code>和<code>法令</code>等。不同国家有着不同的社会性质，不同的社会制度对于组织活动有不同的限制和要求。即使是社会制度不变的同一国家，在不同时期，也会由于执政党的不同，其政府方针特点、政策倾向对组织活动态度和影响也是不同变化的.</p><p>  一般考量政治环境的关键因素有以下指标</p><ul><li>政治体制</li><li>经济体制</li><li>财政政策</li><li>税收政策</li><li>产业政策</li><li>投资政策</li><li>国防开支水平</li><li>政府补贴水平</li><li>民众的政治参与度、等</li></ul><blockquote><p>政治分析可参考的网站举例：</p><ul><li><a href="http://www.npc.gov.cn/npc/index.shtml" target="_blank" rel="noopener">中国人大网</a></li><li><a href="http://www.gov.cn/index.htm" target="_blank" rel="noopener">中国中央政府网</a></li><li>还有个地方的网站，不一一举例了。</li></ul></blockquote><h4 id="经济环境-economic-factors"><a class="header-anchor" href="#经济环境-economic-factors"># </a>经济环境(Economic Factors)</h4><p>  <a href="https://wiki.mbalib.com/wiki/%E7%BB%8F%E6%B5%8E%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">经济环境</a>分为宏观和微观两个方面。</p><p>  <a href="https://wiki.mbalib.com/wiki/%E5%AE%8F%E8%A7%82%E7%BB%8F%E6%B5%8E%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">宏观经济环境</a>主要指一个国家的人口数量及其增长趋势，<a href="https://wiki.mbalib.com/wiki/%E5%9B%BD%E6%B0%91%E6%94%B6%E5%85%A5" target="_blank" rel="noopener">国民收入</a>、<a href="https://wiki.mbalib.com/wiki/%E5%9B%BD%E6%B0%91%E7%94%9F%E4%BA%A7%E6%80%BB%E5%80%BC" target="_blank" rel="noopener">国民生产总值</a>及其变化情况以及通过这些指标能够反映的<a href="https://wiki.mbalib.com/wiki/%E5%9B%BD%E6%B0%91%E7%BB%8F%E6%B5%8E" target="_blank" rel="noopener">国民经济</a><a href="https://wiki.mbalib.com/wiki/%E5%8F%91%E5%B1%95%E6%B0%B4%E5%B9%B3" target="_blank" rel="noopener">发展水平</a>和<a href="https://wiki.mbalib.com/wiki/%E5%8F%91%E5%B1%95%E9%80%9F%E5%BA%A6" target="_blank" rel="noopener">发展速度</a>。</p><p>  <a href="https://wiki.mbalib.com/wiki/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">微观经济环境</a>主要指企业所在地区或所服务地区的消费者的收入水平、<a href="https://wiki.mbalib.com/wiki/%E6%B6%88%E8%B4%B9%E5%81%8F%E5%A5%BD" target="_blank" rel="noopener">消费偏好</a>、储蓄情况、就业程度等因素。这些因素直接决定着企业目前及未来的市场大小。</p><p>分析经济环境的关键指标有：</p><ul><li><a href="https://baike.baidu.com/item/%E5%9B%BD%E5%86%85%E7%94%9F%E4%BA%A7%E6%80%BB%E5%80%BC/31864?fromtitle=GDP&amp;fromid=41201" target="_blank" rel="noopener">国内生产总值</a>(GDP)及增长率</li><li>进出口总额及增长率</li><li>利率</li><li>汇率</li><li><a href="https://wiki.mbalib.com/wiki/%E9%80%9A%E8%B4%A7%E8%86%A8%E8%83%80%E7%8E%87" target="_blank" rel="noopener">通货膨胀率</a></li><li><a href="https://baike.baidu.com/item/%E6%B6%88%E8%B4%B9%E8%80%85%E7%89%A9%E4%BB%B7%E6%8C%87%E6%95%B0/9843779?fromtitle=CPI&amp;fromid=5561" target="_blank" rel="noopener">消费价格指数(CPI)</a></li><li><a href="https://baike.baidu.com/item/%E4%BA%BA%E5%9D%87%E5%8F%AF%E6%94%AF%E9%85%8D%E6%94%B6%E5%85%A5?fromtitle=%E5%B1%85%E6%B0%91%E5%8F%AF%E6%94%AF%E9%85%8D%E6%94%B6%E5%85%A5&amp;fromid=843061" target="_blank" rel="noopener">居民可支配收入</a></li><li><a href="https://wiki.mbalib.com/wiki/%E8%B4%A7%E5%B8%81" target="_blank" rel="noopener">货币</a>与<a href="https://wiki.mbalib.com/wiki/%E8%B4%A2%E6%94%BF%E6%94%BF%E7%AD%96" target="_blank" rel="noopener">财政政策</a></li><li>失业率与失业趋势</li><li><a href="https://wiki.mbalib.com/wiki/%E8%AF%81%E5%88%B8%E5%B8%82%E5%9C%BA" target="_blank" rel="noopener">证券市场</a>状况</li><li>价格波动</li><li>劳动生产率、等</li></ul><blockquote><p>数据参考网站：</p><p><a href="http://www.stats.gov.cn/" target="_blank" rel="noopener">国家统计局</a></p></blockquote><h4 id="社会文化环境-sociocultural-factors"><a class="header-anchor" href="#社会文化环境-sociocultural-factors"># </a><a href="https://wiki.mbalib.com/wiki/%E7%A4%BE%E4%BC%9A%E6%96%87%E5%8C%96%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">社会文化环境</a>(Sociocultural Factors)</h4><p>  社会环境包括一个国家或地区的居民教育程度水平、道德水平、宗教信仰，风俗习惯、审美观点、价值观念、<a href="https://baike.baidu.com/item/%E4%BA%BA%E5%8F%A3%E5%8F%98%E5%8A%A8" target="_blank" rel="noopener">人口变动</a>趋势等。</p><p>  文化水平会影响居民的需求层次；宗教信仰和风俗习惯会禁止或抵制某些活动的进行；<a href="https://wiki.mbalib.com/wiki/%E4%BB%B7%E5%80%BC%E8%A7%82%E5%BF%B5" target="_blank" rel="noopener">价值观念</a>会影响居民对<a href="https://wiki.mbalib.com/wiki/%E7%BB%84%E7%BB%87%E7%9B%AE%E6%A0%87" target="_blank" rel="noopener">组织目标</a>、组织活动以及组织存在本身的认可与否；审美观点则会影响人们对组织活动内容、活动方式以及活动成果的态度。</p><p> 　　<strong>关键的社会文化因素：</strong></p><ul><li>妇女生育率</li><li>人口结构比例</li><li>性别比例</li><li>出生率死亡率</li><li>人口移进移出率</li><li>种族结构</li><li>社会保障计划</li><li>人口预期寿命</li><li>人均收入</li><li>生活方式</li><li>平均教育状况</li><li>城市、城镇和农村的人口变化</li><li>宗教信仰状况等</li></ul><h4 id="技术环境-technological-factors"><a class="header-anchor" href="#技术环境-technological-factors"># </a><a href="https://wiki.mbalib.com/wiki/%E6%8A%80%E6%9C%AF%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">技术环境</a>(Technological Factors)</h4><p>技术环境除了要考察与企业所处领域的活动直接相关的技术手段的发展变化外，还应及时了解：</p><ol><li><p>国家对科技开发的投资和支持重点；</p></li><li><p>该领域技术发展动态和研究开发费用总额；</p></li><li><p><a href="https://wiki.mbalib.com/wiki/%E6%8A%80%E6%9C%AF%E8%BD%AC%E7%A7%BB" target="_blank" rel="noopener">技术转移</a>和技术<a href="https://wiki.mbalib.com/wiki/%E5%95%86%E5%93%81%E5%8C%96" target="_blank" rel="noopener">商品化</a>速度；</p></li><li><p>专利及其保护情况，等等。</p></li></ol><p>分析科技因素的指标有：</p><ul><li>新技术的发明和发展</li><li>技术更新速度</li><li>技术传播速度</li><li>技术商品化速度</li><li>国家重点支持项目、国家投入研发费用</li><li>专利个数和保护情况、等</li></ul><blockquote><p>数据参考网站：</p><p><a href="http://epub.sipo.gov.cn/" target="_blank" rel="noopener">中国专利公布公告网</a></p><p><a href="http://www.stats.gov.cn/" target="_blank" rel="noopener">国家统计局</a></p><p><a href="http://www.pss-system.gov.cn/" target="_blank" rel="noopener">专利检索及分析网</a></p><p><a href="http://chinaip.sipo.gov.cn/" target="_blank" rel="noopener">国家重点产业专利信息服务平台</a></p></blockquote><p><a href="https://wiki.mbalib.com/wiki/PEST%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B#PEST.E5.88.86.E6.9E.90.E6.A8.A1.E5.9E.8B.E6.A1.88.E4.BE.8B.E5.88.86.E6.9E.90" target="_blank" rel="noopener">点击查看分析案例</a></p><h3 id="5w2h🌟"><a class="header-anchor" href="#5w2h🌟"># </a>5W2H🌟</h3><p>  5W2H模型能简单，方便，易于理解，广泛用于企业营销、活动管理产品分析等，对于决策和执行性的活动措施也非常有帮助，也有助于弥补考虑问题的疏漏。</p><p>WHY——为什么？为什么要这么做？理由何在？原因是什么？</p><ul><li>WHAT——是什么？目的是什么？做什么工作？</li><li>WHO——谁？由谁来承担？谁来完成？谁负责？</li><li>WHEN——何时？什么时间完成？什么时机最适宜？</li><li>WHERE——何处？在哪里做？从哪里入手？</li><li>HOW——怎么做？如何提高效率？如何实施？方法怎样？</li><li>HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？</li></ul><blockquote><p>案例：</p></blockquote><p><img src="/assets/dataanalysis/0/5W2H%E6%A1%88%E4%BE%8B.jpg" alt="5w2H"></p><h3 id="时间管理模型-time-management"><a class="header-anchor" href="#时间管理模型-time-management"># </a>时间管理模型（Time Management）</h3><p>  时间管理常常用于工作安排和自我管理，和数据分析管理不大，这里只做补充说明。时间管理的目的是为了决定什么事该做，什么事不该做，从而有效地运用时间，降低变动性。这里列举了两个</p><h4 id="时间-四象限-法"><a class="header-anchor" href="#时间-四象限-法"># </a>时间“四象限”法</h4><p>  著名管理学家科维提出的一个时间管理的理论，把工作按照重要和紧急两个不同的程度进行了划分，基本上可以分为四个“象限”：</p><ul><li>既紧急又重要（如<a href="https://wiki.mbalib.com/wiki/%E4%BA%BA%E4%BA%8B%E5%8D%B1%E6%9C%BA" target="_blank" rel="noopener">人事危机</a>、<a href="https://wiki.mbalib.com/wiki/%E5%AE%A2%E6%88%B7%E6%8A%95%E8%AF%89" target="_blank" rel="noopener">客户投诉</a>、即将到期的任务、<a href="https://wiki.mbalib.com/wiki/%E8%B4%A2%E5%8A%A1%E5%8D%B1%E6%9C%BA" target="_blank" rel="noopener">财务危机</a>等）</li><li>重要但不紧急（如建立<a href="https://wiki.mbalib.com/wiki/%E4%BA%BA%E9%99%85%E5%85%B3%E7%B3%BB" target="_blank" rel="noopener">人际关系</a>、新的机会、<a href="https://wiki.mbalib.com/wiki/%E4%BA%BA%E5%91%98%E5%9F%B9%E8%AE%AD" target="_blank" rel="noopener">人员培训</a>、制订防范措施等）</li><li>紧急但不重要（如电话铃声、不速之客、<a href="https://wiki.mbalib.com/wiki/%E8%A1%8C%E6%94%BF%E6%A3%80%E6%9F%A5" target="_blank" rel="noopener">行政检查</a>、主管部门会议等）</li><li>既不紧急也不重要（如客套的闲谈、无聊的信件、个人的爱好等）。</li></ul><p><img src="https://wiki.mbalib.com/w/images/a/a0/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86.png" alt="时间管理"></p><ol><li><p>对重要和紧急的事情当然是立即就做</p></li><li><p>而对不重要不紧急的事情不做</p></li><li><p>平时多做重要但不紧急的事情，（因为这是第二象限，常常被称为第二象限工作法）</p></li><li><p>对紧急但不重要的事情选择做。</p></li></ol><h4 id="计划管理"><a class="header-anchor" href="#计划管理"># </a>计划管理</h4><p>  关于计划，有日计划、周计划、月计划、季度计划、年度计划。时间管理的重点是待办单、日计划、周计划、月计划。</p><ul><li>待办单：将你每日要做的一些工作事先列出一份清单，排出优先次序，确认完成时间，以突出工作重点。要避免遗忘就要避免半途而废，尽可能做到，今日事今日毕。</li><li>待办单主要包括的内容：非日常工作、特殊事项、行动计划中的工作、昨日未完成的事项等。</li><li>待办单的使用注意：每天在固定时间制定待办单（一上班就做）、只制定一张待办单、完成一项工作划掉一项、待办单要为应付紧急情况留出时间、最关键的一项，每天坚持。</li><li>每年年末作出下一年度工作规划； 每季季末作出下季末工作规划；每月月末作出下月工作计划；每周周末作出下周工作计划</li></ul><blockquote><p>其他时间管理理论：<a href="https://wiki.mbalib.com/wiki/Category:%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86" target="_blank" rel="noopener">点击查看</a></p></blockquote><h3 id="逻辑树分析法🌟"><a class="header-anchor" href="#逻辑树分析法🌟"># </a>逻辑树分析法🌟</h3><p>  逻辑树又称问题树、演绎树或分解树等。<a href="https://wiki.mbalib.com/wiki/%E9%BA%A6%E8%82%AF%E9%94%A1" target="_blank" rel="noopener">麦肯锡</a>分析问题最常使用的工具就是“逻辑树”。逻辑树是将问题的所有子问题分层罗列，从最高层开始，并逐步向下扩展。</p><blockquote><p>逻辑树分析法特点</p></blockquote><p><img src="/assets/dataanalysis/0/%E9%80%BB%E8%BE%91%E6%A0%91%E5%88%86%E6%9E%90%E6%B3%95%E7%89%B9%E7%82%B9.gif" alt="逻辑树分析法"></p><blockquote><p>逻辑树种类</p></blockquote><p><img src="/assets/dataanalysis/0/%E9%80%BB%E8%BE%91%E6%A0%91%E7%A7%8D%E7%B1%BB.gif" alt="逻辑树种类"></p><blockquote><p>逻辑树分析法举例</p><p>案例来源：小明学数据–<a href="https://zhuanlan.zhihu.com/p/35933899" target="_blank" rel="noopener">数据分析基础—2.2.3 逻辑树分析法</a></p></blockquote><h4 id="提出问题-问题树"><a class="header-anchor" href="#提出问题-问题树"># </a>提出问题(问题树)</h4><p>  在运用逻辑树时，首先可由左至右画出树状图，最左边是已知问题，即思考的目标问题——树干，其次再思考造成问题的原因，作出第一层原因——树枝，当第一层原因浮现后，可针对个别原因再深入细究，依次是第二层原因、第三层…，逐层递推,逐渐有抽象转化为具体的可分析的问题。</p><p><img src="/assets/dataanalysis/0/%E9%97%AE%E9%A2%98%E6%A0%91.jpg" alt="问题数"></p><h4 id="解决问题-方法树"><a class="header-anchor" href="#解决问题-方法树"># </a>解决问题(方法树)</h4><p>  在以逻辑树追究出问题的原因之后，接下来就以分析的结果做为依据，思考具体的解决方案。这个过程可以借助解决问题的逻辑树达成，做法上也与追究原因类似：首先最左边是思考的主题也就是已知问题——树干，之后则是已知问题有几种解决方案，即第一层树枝，然后再深入分析提出第二层解决方案，一步步深入到具体可执行的方法（smart原则）。</p><p><img src="/assets/dataanalysis/0/%E6%96%B9%E6%B3%95%E6%A0%91.jpg" alt="方法树"></p><h3 id="金字塔模型"><a class="header-anchor" href="#金字塔模型"># </a>金字塔模型</h3><p><a href="http://www.woshipm.com/operate/2586618.html" target="_blank" rel="noopener">http://www.woshipm.com/operate/2586618.html</a></p><p><a href="http://www.woshipm.com/operate/1294732.html" target="_blank" rel="noopener">http://www.woshipm.com/operate/1294732.html</a></p><h3 id="smart原则"><a class="header-anchor" href="#smart原则"># </a>SMART原则</h3><p>  smart原则常用于目标管理，是最常用的管理理论之一，和数据分析关系不是很大，此处用作补充说明。目标管理是使经理的工作变被动为主动的一个很好的手段，实施目标管理不但是有利于员工更加明确高效地工作，更是为了未来的绩效考核制定了目标和考核标准，使考核更加科学化、规范化，更能保证考核的公开、公平与公正。毕竟，没有目标你是无法考核员工的。原则如下：</p><ul><li>S代表具体(Specific)，指目标要切中特定的工作指标，不能笼统；</li><li>M代表可衡量的(Measurable)，指目标是数量化或者行为化的，验证这些绩效指标的数据或者信息是可以获得的；</li><li>A代表可实现(Attainable)，指目标 在付出努力的情况下可以实现，避免设立过高或过低的目标；</li><li>R代表是相关的(Relevant)，指目标是与总体目标是有关的；</li><li>T代表有时限(Time bound)，注重完成目标的特定期限；</li></ul><blockquote><p>具体资料案例可<a href="https://wiki.mbalib.com/wiki/SMART%E5%8E%9F%E5%88%99" target="_blank" rel="noopener">点击链接</a>查阅</p></blockquote><h2 id="常见的数据分析场景"><a class="header-anchor" href="#常见的数据分析场景"># </a>常见的数据分析场景</h2><ul><li><p>运营</p><ul><li>活动运营</li><li>内容运营</li><li>商品运营</li><li>用户运营<ul><li>用户分类</li><li>用户生命周期</li></ul></li></ul></li><li><p>产品</p><ul><li>产品功能</li><li>产品体验</li><li>产品调研</li><li>用户需求调研</li></ul></li><li><p>市场</p><ul><li>商务合作效果</li><li>渠道推广效果</li><li>投入产出比</li></ul></li></ul><h2 id="列举几个数据模型"><a class="header-anchor" href="#列举几个数据模型"># </a>列举几个数据模型</h2><h3 id="qq模型"><a class="header-anchor" href="#qq模型"># </a>QQ模型</h3><p> QQ模型常常用于分析某一时间内某一产品的的反馈效果，用于评估一个产品是否有效，及时发现问题所在，并做好相应对策的，常用于互联网产品的分析。</p><p>quantity数量（绝对数）</p><ul><li>用户数</li><li>浏览量</li><li>点击量</li></ul><p>quality：质量（相对数）</p><ul><li>留存率</li><li>转化率</li><li>参与率</li></ul><blockquote><p>案例</p></blockquote><p><img src="http://note.youdao.com/yws/res/10957/WEBRESOURCEfbbe868944aa8033c62397881a56845e" alt="20191104125218.jpg"></p><h2 id="aarrr模型"><a class="header-anchor" href="#aarrr模型"># </a>AARRR模型</h2><p>AARRR是Acquisition、Activation、Retention、Revenue、Refer，这个五个单词的缩写，分别对应用户生命周期中的5个重要环节。</p><ol><li>Acquisition 用户获取<ul><li>用户获取成本=（营销费用+销售费用)/同时期新增用户数</li><li>用户来源渠道：渠道新用户数、驱动用户占比、渠道成本</li></ul></li><li>Activation 用户激活<ul><li>定义用户行为、用户激活率、激活漏斗转化率</li></ul></li><li>Retention 用户留存<ul><li>用户生命周期、用户留存率、不同用户分组留存率</li></ul></li><li>Revenue 收入<ul><li>付费用户数、付费用户占比，平均付费金额</li></ul></li><li>Refer 推荐<ul><li>推荐用户数</li><li>推荐转化率</li><li>被推荐转化率</li></ul></li></ol><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>宏观环境又称为一般环境，是指影响一切行业和企业的各种宏观力量 <a href="#fnref1" class="footnote-backref">↩</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
          <category> 基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
